// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yellow.proto

package ch.bfh.roboticsLab.yellow;

public final class YellowProtoBuffer {
  private YellowProtoBuffer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Available robot states 
   * </pre>
   *
   * Protobuf enum {@code ch.bfh.roboticsLab.yellow.communication.StateName}
   */
  public enum StateName
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFF = 1;</code>
     */
    OFF(1),
    /**
     * <code>MANUAL = 2;</code>
     */
    MANUAL(2),
    /**
     * <code>AUTO_REACTIVE = 3;</code>
     */
    AUTO_REACTIVE(3),
    /**
     * <code>AUTO_POSITION = 4;</code>
     */
    AUTO_POSITION(4),
    ;

    /**
     * <code>OFF = 1;</code>
     */
    public static final int OFF_VALUE = 1;
    /**
     * <code>MANUAL = 2;</code>
     */
    public static final int MANUAL_VALUE = 2;
    /**
     * <code>AUTO_REACTIVE = 3;</code>
     */
    public static final int AUTO_REACTIVE_VALUE = 3;
    /**
     * <code>AUTO_POSITION = 4;</code>
     */
    public static final int AUTO_POSITION_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StateName valueOf(int value) {
      return forNumber(value);
    }

    public static StateName forNumber(int value) {
      switch (value) {
        case 1: return OFF;
        case 2: return MANUAL;
        case 3: return AUTO_REACTIVE;
        case 4: return AUTO_POSITION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StateName>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        StateName> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StateName>() {
            public StateName findValueByNumber(int number) {
              return StateName.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.getDescriptor().getEnumTypes().get(0);
    }

    private static final StateName[] VALUES = values();

    public static StateName valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private StateName(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ch.bfh.roboticsLab.yellow.communication.StateName)
  }

  public interface StateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.State)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Robot state
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.StateName stateName = 1;</code>
     */
    boolean hasStateName();
    /**
     * <pre>
     * Robot state
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.StateName stateName = 1;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateName getStateName();
  }
  /**
   * <pre>
   * State message.
   * This message contains the current or desired operation state.
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.State}
   */
  public  static final class State extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.State)
      StateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use State.newBuilder() to construct.
    private State(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private State() {
      stateName_ = 1;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private State(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateName value = ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateName.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                stateName_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_State_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_State_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder.class);
    }

    private int bitField0_;
    public static final int STATENAME_FIELD_NUMBER = 1;
    private int stateName_;
    /**
     * <pre>
     * Robot state
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.StateName stateName = 1;</code>
     */
    public boolean hasStateName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Robot state
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.StateName stateName = 1;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateName getStateName() {
      @SuppressWarnings("deprecation")
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateName result = ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateName.valueOf(stateName_);
      return result == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateName.OFF : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStateName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, stateName_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, stateName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State) obj;

      boolean result = true;
      result = result && (hasStateName() == other.hasStateName());
      if (hasStateName()) {
        result = result && stateName_ == other.stateName_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStateName()) {
        hash = (37 * hash) + STATENAME_FIELD_NUMBER;
        hash = (53 * hash) + stateName_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * State message.
     * This message contains the current or desired operation state.
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.State}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.State)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_State_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_State_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        stateName_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_State_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.stateName_ = stateName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.getDefaultInstance()) return this;
        if (other.hasStateName()) {
          setStateName(other.getStateName());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasStateName()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int stateName_ = 1;
      /**
       * <pre>
       * Robot state
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.StateName stateName = 1;</code>
       */
      public boolean hasStateName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Robot state
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.StateName stateName = 1;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateName getStateName() {
        @SuppressWarnings("deprecation")
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateName result = ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateName.valueOf(stateName_);
        return result == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateName.OFF : result;
      }
      /**
       * <pre>
       * Robot state
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.StateName stateName = 1;</code>
       */
      public Builder setStateName(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateName value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        stateName_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Robot state
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.StateName stateName = 1;</code>
       */
      public Builder clearStateName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        stateName_ = 1;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.State)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.State)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<State>
        PARSER = new com.google.protobuf.AbstractParser<State>() {
      @java.lang.Override
      public State parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new State(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<State> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<State> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PoseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.Pose)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Estimated global x position [m]
     * </pre>
     *
     * <code>required float x = 1;</code>
     */
    boolean hasX();
    /**
     * <pre>
     * Estimated global x position [m]
     * </pre>
     *
     * <code>required float x = 1;</code>
     */
    float getX();

    /**
     * <pre>
     * Estimated global y position [m]
     * </pre>
     *
     * <code>required float y = 2;</code>
     */
    boolean hasY();
    /**
     * <pre>
     * Estimated global y position [m]
     * </pre>
     *
     * <code>required float y = 2;</code>
     */
    float getY();

    /**
     * <pre>
     * Estimated global orientation [rad]
     * </pre>
     *
     * <code>required float alpha = 3;</code>
     */
    boolean hasAlpha();
    /**
     * <pre>
     * Estimated global orientation [rad]
     * </pre>
     *
     * <code>required float alpha = 3;</code>
     */
    float getAlpha();
  }
  /**
   * <pre>
   * Pose message.
   * This message contains a robot global pose.
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.Pose}
   */
  public  static final class Pose extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.Pose)
      PoseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Pose.newBuilder() to construct.
    private Pose(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Pose() {
      x_ = 0F;
      y_ = 0F;
      alpha_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Pose(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              alpha_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Pose_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Pose_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder.class);
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <pre>
     * Estimated global x position [m]
     * </pre>
     *
     * <code>required float x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Estimated global x position [m]
     * </pre>
     *
     * <code>required float x = 1;</code>
     */
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <pre>
     * Estimated global y position [m]
     * </pre>
     *
     * <code>required float y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Estimated global y position [m]
     * </pre>
     *
     * <code>required float y = 2;</code>
     */
    public float getY() {
      return y_;
    }

    public static final int ALPHA_FIELD_NUMBER = 3;
    private float alpha_;
    /**
     * <pre>
     * Estimated global orientation [rad]
     * </pre>
     *
     * <code>required float alpha = 3;</code>
     */
    public boolean hasAlpha() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Estimated global orientation [rad]
     * </pre>
     *
     * <code>required float alpha = 3;</code>
     */
    public float getAlpha() {
      return alpha_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAlpha()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, alpha_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, alpha_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose) obj;

      boolean result = true;
      result = result && (hasX() == other.hasX());
      if (hasX()) {
        result = result && (
            java.lang.Float.floatToIntBits(getX())
            == java.lang.Float.floatToIntBits(
                other.getX()));
      }
      result = result && (hasY() == other.hasY());
      if (hasY()) {
        result = result && (
            java.lang.Float.floatToIntBits(getY())
            == java.lang.Float.floatToIntBits(
                other.getY()));
      }
      result = result && (hasAlpha() == other.hasAlpha());
      if (hasAlpha()) {
        result = result && (
            java.lang.Float.floatToIntBits(getAlpha())
            == java.lang.Float.floatToIntBits(
                other.getAlpha()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getX());
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getY());
      }
      if (hasAlpha()) {
        hash = (37 * hash) + ALPHA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAlpha());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Pose message.
     * This message contains a robot global pose.
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.Pose}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.Pose)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Pose_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Pose_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        alpha_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Pose_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.alpha_ = alpha_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasAlpha()) {
          setAlpha(other.getAlpha());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasX()) {
          return false;
        }
        if (!hasY()) {
          return false;
        }
        if (!hasAlpha()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float x_ ;
      /**
       * <pre>
       * Estimated global x position [m]
       * </pre>
       *
       * <code>required float x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Estimated global x position [m]
       * </pre>
       *
       * <code>required float x = 1;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <pre>
       * Estimated global x position [m]
       * </pre>
       *
       * <code>required float x = 1;</code>
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Estimated global x position [m]
       * </pre>
       *
       * <code>required float x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <pre>
       * Estimated global y position [m]
       * </pre>
       *
       * <code>required float y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Estimated global y position [m]
       * </pre>
       *
       * <code>required float y = 2;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <pre>
       * Estimated global y position [m]
       * </pre>
       *
       * <code>required float y = 2;</code>
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Estimated global y position [m]
       * </pre>
       *
       * <code>required float y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }

      private float alpha_ ;
      /**
       * <pre>
       * Estimated global orientation [rad]
       * </pre>
       *
       * <code>required float alpha = 3;</code>
       */
      public boolean hasAlpha() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Estimated global orientation [rad]
       * </pre>
       *
       * <code>required float alpha = 3;</code>
       */
      public float getAlpha() {
        return alpha_;
      }
      /**
       * <pre>
       * Estimated global orientation [rad]
       * </pre>
       *
       * <code>required float alpha = 3;</code>
       */
      public Builder setAlpha(float value) {
        bitField0_ |= 0x00000004;
        alpha_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Estimated global orientation [rad]
       * </pre>
       *
       * <code>required float alpha = 3;</code>
       */
      public Builder clearAlpha() {
        bitField0_ = (bitField0_ & ~0x00000004);
        alpha_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.Pose)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.Pose)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Pose>
        PARSER = new com.google.protobuf.AbstractParser<Pose>() {
      @java.lang.Override
      public Pose parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Pose(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Pose> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Pose> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CovarianceMatrixOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated float p = 1;</code>
     */
    java.util.List<java.lang.Float> getPList();
    /**
     * <code>repeated float p = 1;</code>
     */
    int getPCount();
    /**
     * <code>repeated float p = 1;</code>
     */
    float getP(int index);
  }
  /**
   * <pre>
   * Covariance matrix message.
   * This message contains the covariance matrix of the pose estimation.
   * The 3x3 matrix is represented 
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix}
   */
  public  static final class CovarianceMatrix extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix)
      CovarianceMatrixOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CovarianceMatrix.newBuilder() to construct.
    private CovarianceMatrix(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CovarianceMatrix() {
      p_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CovarianceMatrix(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                p_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000001;
              }
              p_.add(input.readFloat());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                p_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                p_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          p_ = java.util.Collections.unmodifiableList(p_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_CovarianceMatrix_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_CovarianceMatrix_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.Builder.class);
    }

    public static final int P_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Float> p_;
    /**
     * <code>repeated float p = 1;</code>
     */
    public java.util.List<java.lang.Float>
        getPList() {
      return p_;
    }
    /**
     * <code>repeated float p = 1;</code>
     */
    public int getPCount() {
      return p_.size();
    }
    /**
     * <code>repeated float p = 1;</code>
     */
    public float getP(int index) {
      return p_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < p_.size(); i++) {
        output.writeFloat(1, p_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getPList().size();
        size += dataSize;
        size += 1 * getPList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix) obj;

      boolean result = true;
      result = result && getPList()
          .equals(other.getPList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPCount() > 0) {
        hash = (37 * hash) + P_FIELD_NUMBER;
        hash = (53 * hash) + getPList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Covariance matrix message.
     * This message contains the covariance matrix of the pose estimation.
     * The 3x3 matrix is represented 
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrixOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_CovarianceMatrix_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_CovarianceMatrix_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        p_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_CovarianceMatrix_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          p_ = java.util.Collections.unmodifiableList(p_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.p_ = p_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.getDefaultInstance()) return this;
        if (!other.p_.isEmpty()) {
          if (p_.isEmpty()) {
            p_ = other.p_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePIsMutable();
            p_.addAll(other.p_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Float> p_ = java.util.Collections.emptyList();
      private void ensurePIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          p_ = new java.util.ArrayList<java.lang.Float>(p_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated float p = 1;</code>
       */
      public java.util.List<java.lang.Float>
          getPList() {
        return java.util.Collections.unmodifiableList(p_);
      }
      /**
       * <code>repeated float p = 1;</code>
       */
      public int getPCount() {
        return p_.size();
      }
      /**
       * <code>repeated float p = 1;</code>
       */
      public float getP(int index) {
        return p_.get(index);
      }
      /**
       * <code>repeated float p = 1;</code>
       */
      public Builder setP(
          int index, float value) {
        ensurePIsMutable();
        p_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float p = 1;</code>
       */
      public Builder addP(float value) {
        ensurePIsMutable();
        p_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float p = 1;</code>
       */
      public Builder addAllP(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensurePIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, p_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float p = 1;</code>
       */
      public Builder clearP() {
        p_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CovarianceMatrix>
        PARSER = new com.google.protobuf.AbstractParser<CovarianceMatrix>() {
      @java.lang.Override
      public CovarianceMatrix parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CovarianceMatrix(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CovarianceMatrix> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CovarianceMatrix> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OdometryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.Odometry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Estimated global robot pose
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
     */
    boolean hasPose();
    /**
     * <pre>
     * Estimated global robot pose
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getPose();
    /**
     * <pre>
     * Estimated global robot pose
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getPoseOrBuilder();

    /**
     * <pre>
     * Covariance matrix of the pose estimation
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
     */
    boolean hasCovarianceMatrix();
    /**
     * <pre>
     * Covariance matrix of the pose estimation
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix getCovarianceMatrix();
    /**
     * <pre>
     * Covariance matrix of the pose estimation
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrixOrBuilder getCovarianceMatrixOrBuilder();
  }
  /**
   * <pre>
   * Odometry message
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.Odometry}
   */
  public  static final class Odometry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.Odometry)
      OdometryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Odometry.newBuilder() to construct.
    private Odometry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Odometry() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Odometry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = pose_.toBuilder();
              }
              pose_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pose_);
                pose_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = covarianceMatrix_.toBuilder();
              }
              covarianceMatrix_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(covarianceMatrix_);
                covarianceMatrix_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Odometry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Odometry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.Builder.class);
    }

    private int bitField0_;
    public static final int POSE_FIELD_NUMBER = 1;
    private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose pose_;
    /**
     * <pre>
     * Estimated global robot pose
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
     */
    public boolean hasPose() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Estimated global robot pose
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getPose() {
      return pose_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : pose_;
    }
    /**
     * <pre>
     * Estimated global robot pose
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getPoseOrBuilder() {
      return pose_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : pose_;
    }

    public static final int COVARIANCEMATRIX_FIELD_NUMBER = 2;
    private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix covarianceMatrix_;
    /**
     * <pre>
     * Covariance matrix of the pose estimation
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
     */
    public boolean hasCovarianceMatrix() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Covariance matrix of the pose estimation
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix getCovarianceMatrix() {
      return covarianceMatrix_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.getDefaultInstance() : covarianceMatrix_;
    }
    /**
     * <pre>
     * Covariance matrix of the pose estimation
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrixOrBuilder getCovarianceMatrixOrBuilder() {
      return covarianceMatrix_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.getDefaultInstance() : covarianceMatrix_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPose()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPose().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getPose());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getCovarianceMatrix());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPose());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCovarianceMatrix());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry) obj;

      boolean result = true;
      result = result && (hasPose() == other.hasPose());
      if (hasPose()) {
        result = result && getPose()
            .equals(other.getPose());
      }
      result = result && (hasCovarianceMatrix() == other.hasCovarianceMatrix());
      if (hasCovarianceMatrix()) {
        result = result && getCovarianceMatrix()
            .equals(other.getCovarianceMatrix());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPose()) {
        hash = (37 * hash) + POSE_FIELD_NUMBER;
        hash = (53 * hash) + getPose().hashCode();
      }
      if (hasCovarianceMatrix()) {
        hash = (37 * hash) + COVARIANCEMATRIX_FIELD_NUMBER;
        hash = (53 * hash) + getCovarianceMatrix().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Odometry message
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.Odometry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.Odometry)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.OdometryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Odometry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Odometry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPoseFieldBuilder();
          getCovarianceMatrixFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (poseBuilder_ == null) {
          pose_ = null;
        } else {
          poseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (covarianceMatrixBuilder_ == null) {
          covarianceMatrix_ = null;
        } else {
          covarianceMatrixBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Odometry_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (poseBuilder_ == null) {
          result.pose_ = pose_;
        } else {
          result.pose_ = poseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (covarianceMatrixBuilder_ == null) {
          result.covarianceMatrix_ = covarianceMatrix_;
        } else {
          result.covarianceMatrix_ = covarianceMatrixBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.getDefaultInstance()) return this;
        if (other.hasPose()) {
          mergePose(other.getPose());
        }
        if (other.hasCovarianceMatrix()) {
          mergeCovarianceMatrix(other.getCovarianceMatrix());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPose()) {
          return false;
        }
        if (!getPose().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose pose_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder> poseBuilder_;
      /**
       * <pre>
       * Estimated global robot pose
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
       */
      public boolean hasPose() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Estimated global robot pose
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getPose() {
        if (poseBuilder_ == null) {
          return pose_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : pose_;
        } else {
          return poseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Estimated global robot pose
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
       */
      public Builder setPose(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose value) {
        if (poseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pose_ = value;
          onChanged();
        } else {
          poseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Estimated global robot pose
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
       */
      public Builder setPose(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder builderForValue) {
        if (poseBuilder_ == null) {
          pose_ = builderForValue.build();
          onChanged();
        } else {
          poseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Estimated global robot pose
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
       */
      public Builder mergePose(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose value) {
        if (poseBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              pose_ != null &&
              pose_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance()) {
            pose_ =
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.newBuilder(pose_).mergeFrom(value).buildPartial();
          } else {
            pose_ = value;
          }
          onChanged();
        } else {
          poseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Estimated global robot pose
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
       */
      public Builder clearPose() {
        if (poseBuilder_ == null) {
          pose_ = null;
          onChanged();
        } else {
          poseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * Estimated global robot pose
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder getPoseBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPoseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Estimated global robot pose
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getPoseOrBuilder() {
        if (poseBuilder_ != null) {
          return poseBuilder_.getMessageOrBuilder();
        } else {
          return pose_ == null ?
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : pose_;
        }
      }
      /**
       * <pre>
       * Estimated global robot pose
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose pose = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder> 
          getPoseFieldBuilder() {
        if (poseBuilder_ == null) {
          poseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder>(
                  getPose(),
                  getParentForChildren(),
                  isClean());
          pose_ = null;
        }
        return poseBuilder_;
      }

      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix covarianceMatrix_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrixOrBuilder> covarianceMatrixBuilder_;
      /**
       * <pre>
       * Covariance matrix of the pose estimation
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
       */
      public boolean hasCovarianceMatrix() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Covariance matrix of the pose estimation
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix getCovarianceMatrix() {
        if (covarianceMatrixBuilder_ == null) {
          return covarianceMatrix_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.getDefaultInstance() : covarianceMatrix_;
        } else {
          return covarianceMatrixBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Covariance matrix of the pose estimation
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
       */
      public Builder setCovarianceMatrix(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix value) {
        if (covarianceMatrixBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          covarianceMatrix_ = value;
          onChanged();
        } else {
          covarianceMatrixBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Covariance matrix of the pose estimation
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
       */
      public Builder setCovarianceMatrix(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.Builder builderForValue) {
        if (covarianceMatrixBuilder_ == null) {
          covarianceMatrix_ = builderForValue.build();
          onChanged();
        } else {
          covarianceMatrixBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Covariance matrix of the pose estimation
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
       */
      public Builder mergeCovarianceMatrix(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix value) {
        if (covarianceMatrixBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              covarianceMatrix_ != null &&
              covarianceMatrix_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.getDefaultInstance()) {
            covarianceMatrix_ =
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.newBuilder(covarianceMatrix_).mergeFrom(value).buildPartial();
          } else {
            covarianceMatrix_ = value;
          }
          onChanged();
        } else {
          covarianceMatrixBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Covariance matrix of the pose estimation
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
       */
      public Builder clearCovarianceMatrix() {
        if (covarianceMatrixBuilder_ == null) {
          covarianceMatrix_ = null;
          onChanged();
        } else {
          covarianceMatrixBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * Covariance matrix of the pose estimation
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.Builder getCovarianceMatrixBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCovarianceMatrixFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Covariance matrix of the pose estimation
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrixOrBuilder getCovarianceMatrixOrBuilder() {
        if (covarianceMatrixBuilder_ != null) {
          return covarianceMatrixBuilder_.getMessageOrBuilder();
        } else {
          return covarianceMatrix_ == null ?
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.getDefaultInstance() : covarianceMatrix_;
        }
      }
      /**
       * <pre>
       * Covariance matrix of the pose estimation
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.CovarianceMatrix covarianceMatrix = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrixOrBuilder> 
          getCovarianceMatrixFieldBuilder() {
        if (covarianceMatrixBuilder_ == null) {
          covarianceMatrixBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrix.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.CovarianceMatrixOrBuilder>(
                  getCovarianceMatrix(),
                  getParentForChildren(),
                  isClean());
          covarianceMatrix_ = null;
        }
        return covarianceMatrixBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.Odometry)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.Odometry)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Odometry>
        PARSER = new com.google.protobuf.AbstractParser<Odometry>() {
      @java.lang.Override
      public Odometry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Odometry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Odometry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Odometry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LidarPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.LidarPoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The angle of the LIDAR measurement
     * </pre>
     *
     * <code>required int32 angle = 1;</code>
     */
    boolean hasAngle();
    /**
     * <pre>
     * The angle of the LIDAR measurement
     * </pre>
     *
     * <code>required int32 angle = 1;</code>
     */
    int getAngle();

    /**
     * <pre>
     * The distance measured
     * </pre>
     *
     * <code>required int32 distance = 2;</code>
     */
    boolean hasDistance();
    /**
     * <pre>
     * The distance measured
     * </pre>
     *
     * <code>required int32 distance = 2;</code>
     */
    int getDistance();

    /**
     * <pre>
     * The quality level of the measurement
     * </pre>
     *
     * <code>optional int32 quality = 3;</code>
     */
    boolean hasQuality();
    /**
     * <pre>
     * The quality level of the measurement
     * </pre>
     *
     * <code>optional int32 quality = 3;</code>
     */
    int getQuality();
  }
  /**
   * <pre>
   * LIDAR point message
   * This message contains one individual LIDAR point measurement.
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.LidarPoint}
   */
  public  static final class LidarPoint extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.LidarPoint)
      LidarPointOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LidarPoint.newBuilder() to construct.
    private LidarPoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LidarPoint() {
      angle_ = 0;
      distance_ = 0;
      quality_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LidarPoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              angle_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              distance_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              quality_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarPoint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.Builder.class);
    }

    private int bitField0_;
    public static final int ANGLE_FIELD_NUMBER = 1;
    private int angle_;
    /**
     * <pre>
     * The angle of the LIDAR measurement
     * </pre>
     *
     * <code>required int32 angle = 1;</code>
     */
    public boolean hasAngle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The angle of the LIDAR measurement
     * </pre>
     *
     * <code>required int32 angle = 1;</code>
     */
    public int getAngle() {
      return angle_;
    }

    public static final int DISTANCE_FIELD_NUMBER = 2;
    private int distance_;
    /**
     * <pre>
     * The distance measured
     * </pre>
     *
     * <code>required int32 distance = 2;</code>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The distance measured
     * </pre>
     *
     * <code>required int32 distance = 2;</code>
     */
    public int getDistance() {
      return distance_;
    }

    public static final int QUALITY_FIELD_NUMBER = 3;
    private int quality_;
    /**
     * <pre>
     * The quality level of the measurement
     * </pre>
     *
     * <code>optional int32 quality = 3;</code>
     */
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * The quality level of the measurement
     * </pre>
     *
     * <code>optional int32 quality = 3;</code>
     */
    public int getQuality() {
      return quality_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAngle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDistance()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, angle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, distance_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, quality_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, angle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, distance_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, quality_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint) obj;

      boolean result = true;
      result = result && (hasAngle() == other.hasAngle());
      if (hasAngle()) {
        result = result && (getAngle()
            == other.getAngle());
      }
      result = result && (hasDistance() == other.hasDistance());
      if (hasDistance()) {
        result = result && (getDistance()
            == other.getDistance());
      }
      result = result && (hasQuality() == other.hasQuality());
      if (hasQuality()) {
        result = result && (getQuality()
            == other.getQuality());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAngle()) {
        hash = (37 * hash) + ANGLE_FIELD_NUMBER;
        hash = (53 * hash) + getAngle();
      }
      if (hasDistance()) {
        hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + getDistance();
      }
      if (hasQuality()) {
        hash = (37 * hash) + QUALITY_FIELD_NUMBER;
        hash = (53 * hash) + getQuality();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * LIDAR point message
     * This message contains one individual LIDAR point measurement.
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.LidarPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.LidarPoint)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarPoint_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        angle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        quality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarPoint_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.angle_ = angle_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.distance_ = distance_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.quality_ = quality_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.getDefaultInstance()) return this;
        if (other.hasAngle()) {
          setAngle(other.getAngle());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasAngle()) {
          return false;
        }
        if (!hasDistance()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int angle_ ;
      /**
       * <pre>
       * The angle of the LIDAR measurement
       * </pre>
       *
       * <code>required int32 angle = 1;</code>
       */
      public boolean hasAngle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * The angle of the LIDAR measurement
       * </pre>
       *
       * <code>required int32 angle = 1;</code>
       */
      public int getAngle() {
        return angle_;
      }
      /**
       * <pre>
       * The angle of the LIDAR measurement
       * </pre>
       *
       * <code>required int32 angle = 1;</code>
       */
      public Builder setAngle(int value) {
        bitField0_ |= 0x00000001;
        angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The angle of the LIDAR measurement
       * </pre>
       *
       * <code>required int32 angle = 1;</code>
       */
      public Builder clearAngle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        angle_ = 0;
        onChanged();
        return this;
      }

      private int distance_ ;
      /**
       * <pre>
       * The distance measured
       * </pre>
       *
       * <code>required int32 distance = 2;</code>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * The distance measured
       * </pre>
       *
       * <code>required int32 distance = 2;</code>
       */
      public int getDistance() {
        return distance_;
      }
      /**
       * <pre>
       * The distance measured
       * </pre>
       *
       * <code>required int32 distance = 2;</code>
       */
      public Builder setDistance(int value) {
        bitField0_ |= 0x00000002;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The distance measured
       * </pre>
       *
       * <code>required int32 distance = 2;</code>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000002);
        distance_ = 0;
        onChanged();
        return this;
      }

      private int quality_ ;
      /**
       * <pre>
       * The quality level of the measurement
       * </pre>
       *
       * <code>optional int32 quality = 3;</code>
       */
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * The quality level of the measurement
       * </pre>
       *
       * <code>optional int32 quality = 3;</code>
       */
      public int getQuality() {
        return quality_;
      }
      /**
       * <pre>
       * The quality level of the measurement
       * </pre>
       *
       * <code>optional int32 quality = 3;</code>
       */
      public Builder setQuality(int value) {
        bitField0_ |= 0x00000004;
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The quality level of the measurement
       * </pre>
       *
       * <code>optional int32 quality = 3;</code>
       */
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000004);
        quality_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.LidarPoint)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.LidarPoint)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LidarPoint>
        PARSER = new com.google.protobuf.AbstractParser<LidarPoint>() {
      @java.lang.Override
      public LidarPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LidarPoint(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LidarPoint> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LidarPoint> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LidarOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.Lidar)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    int getTimestamp();

    /**
     * <pre>
     * The Lidar measurement points
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
     */
    java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint> 
        getPointsList();
    /**
     * <pre>
     * The Lidar measurement points
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint getPoints(int index);
    /**
     * <pre>
     * The Lidar measurement points
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
     */
    int getPointsCount();
    /**
     * <pre>
     * The Lidar measurement points
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
     */
    java.util.List<? extends ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPointOrBuilder> 
        getPointsOrBuilderList();
    /**
     * <pre>
     * The Lidar measurement points
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPointOrBuilder getPointsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * LIDAR message
   * This message contains an array of LIDAR point measurements.
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.Lidar}
   */
  public  static final class Lidar extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.Lidar)
      LidarOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Lidar.newBuilder() to construct.
    private Lidar(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Lidar() {
      timestamp_ = 0;
      points_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Lidar(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                points_ = new java.util.ArrayList<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint>();
                mutable_bitField0_ |= 0x00000002;
              }
              points_.add(
                  input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          points_ = java.util.Collections.unmodifiableList(points_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Lidar_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Lidar_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private int timestamp_;
    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int POINTS_FIELD_NUMBER = 2;
    private java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint> points_;
    /**
     * <pre>
     * The Lidar measurement points
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
     */
    public java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint> getPointsList() {
      return points_;
    }
    /**
     * <pre>
     * The Lidar measurement points
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
     */
    public java.util.List<? extends ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPointOrBuilder> 
        getPointsOrBuilderList() {
      return points_;
    }
    /**
     * <pre>
     * The Lidar measurement points
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
     */
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <pre>
     * The Lidar measurement points
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint getPoints(int index) {
      return points_.get(index);
    }
    /**
     * <pre>
     * The Lidar measurement points
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPointOrBuilder getPointsOrBuilder(
        int index) {
      return points_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getPointsCount(); i++) {
        if (!getPoints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, timestamp_);
      }
      for (int i = 0; i < points_.size(); i++) {
        output.writeMessage(2, points_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, timestamp_);
      }
      for (int i = 0; i < points_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, points_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar) obj;

      boolean result = true;
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (getTimestamp()
            == other.getTimestamp());
      }
      result = result && getPointsList()
          .equals(other.getPointsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp();
      }
      if (getPointsCount() > 0) {
        hash = (37 * hash) + POINTS_FIELD_NUMBER;
        hash = (53 * hash) + getPointsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * LIDAR message
     * This message contains an array of LIDAR point measurements.
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.Lidar}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.Lidar)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Lidar_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Lidar_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPointsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Lidar_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (pointsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            points_ = java.util.Collections.unmodifiableList(points_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.points_ = points_;
        } else {
          result.points_ = pointsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (pointsBuilder_ == null) {
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
        } else {
          if (!other.points_.isEmpty()) {
            if (pointsBuilder_.isEmpty()) {
              pointsBuilder_.dispose();
              pointsBuilder_ = null;
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000002);
              pointsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPointsFieldBuilder() : null;
            } else {
              pointsBuilder_.addAllMessages(other.points_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getPointsCount(); i++) {
          if (!getPoints(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int timestamp_ ;
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint> points_ =
        java.util.Collections.emptyList();
      private void ensurePointsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          points_ = new java.util.ArrayList<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint>(points_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPointOrBuilder> pointsBuilder_;

      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint> getPointsList() {
        if (pointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(points_);
        } else {
          return pointsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public int getPointsCount() {
        if (pointsBuilder_ == null) {
          return points_.size();
        } else {
          return pointsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint getPoints(int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);
        } else {
          return pointsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public Builder setPoints(
          int index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.set(index, value);
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public Builder setPoints(
          int index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public Builder addPoints(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public Builder addPoints(
          int index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(index, value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public Builder addPoints(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public Builder addPoints(
          int index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public Builder addAllPoints(
          java.lang.Iterable<? extends ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint> values) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, points_);
          onChanged();
        } else {
          pointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public Builder clearPoints() {
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public Builder removePoints(int index) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.remove(index);
          onChanged();
        } else {
          pointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.Builder getPointsBuilder(
          int index) {
        return getPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPointOrBuilder getPointsOrBuilder(
          int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);  } else {
          return pointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public java.util.List<? extends ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPointOrBuilder> 
           getPointsOrBuilderList() {
        if (pointsBuilder_ != null) {
          return pointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(points_);
        }
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.Builder addPointsBuilder() {
        return getPointsFieldBuilder().addBuilder(
            ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.getDefaultInstance());
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.Builder addPointsBuilder(
          int index) {
        return getPointsFieldBuilder().addBuilder(
            index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.getDefaultInstance());
      }
      /**
       * <pre>
       * The Lidar measurement points
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarPoint points = 2;</code>
       */
      public java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.Builder> 
           getPointsBuilderList() {
        return getPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPointOrBuilder> 
          getPointsFieldBuilder() {
        if (pointsBuilder_ == null) {
          pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPoint.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarPointOrBuilder>(
                  points_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          points_ = null;
        }
        return pointsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.Lidar)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.Lidar)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Lidar>
        PARSER = new com.google.protobuf.AbstractParser<Lidar>() {
      @java.lang.Override
      public Lidar parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Lidar(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Lidar> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Lidar> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LidarLinesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.LidarLines)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of lines found in the LIDAR data.
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
     */
    java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line> 
        getLinesList();
    /**
     * <pre>
     * List of lines found in the LIDAR data.
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line getLines(int index);
    /**
     * <pre>
     * List of lines found in the LIDAR data.
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
     */
    int getLinesCount();
    /**
     * <pre>
     * List of lines found in the LIDAR data.
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
     */
    java.util.List<? extends ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.LineOrBuilder> 
        getLinesOrBuilderList();
    /**
     * <pre>
     * List of lines found in the LIDAR data.
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.LineOrBuilder getLinesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * LIDAR lines message
   * This message contains lines extracted from a LIDAR measurement analysis.
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.LidarLines}
   */
  public  static final class LidarLines extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.LidarLines)
      LidarLinesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LidarLines.newBuilder() to construct.
    private LidarLines(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LidarLines() {
      lines_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LidarLines(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                lines_ = new java.util.ArrayList<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line>();
                mutable_bitField0_ |= 0x00000001;
              }
              lines_.add(
                  input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          lines_ = java.util.Collections.unmodifiableList(lines_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Builder.class);
    }

    public interface LineOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.LidarLines.Line)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
       */
      boolean hasStart();
      /**
       * <pre>
       * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
       */
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getStart();
      /**
       * <pre>
       * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
       */
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getStartOrBuilder();

      /**
       * <pre>
       * Line end pose
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
       */
      boolean hasEnd();
      /**
       * <pre>
       * Line end pose
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
       */
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getEnd();
      /**
       * <pre>
       * Line end pose
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
       */
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getEndOrBuilder();
    }
    /**
     * <pre>
     * This message contains one LIDAR line. 
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.LidarLines.Line}
     */
    public  static final class Line extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.LidarLines.Line)
        LineOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Line.newBuilder() to construct.
      private Line(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Line() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Line(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = start_.toBuilder();
                }
                start_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(start_);
                  start_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = end_.toBuilder();
                }
                end_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(end_);
                  end_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_Line_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_Line_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.Builder.class);
      }

      private int bitField0_;
      public static final int START_FIELD_NUMBER = 1;
      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose start_;
      /**
       * <pre>
       * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
       */
      public boolean hasStart() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getStart() {
        return start_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : start_;
      }
      /**
       * <pre>
       * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getStartOrBuilder() {
        return start_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : start_;
      }

      public static final int END_FIELD_NUMBER = 2;
      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose end_;
      /**
       * <pre>
       * Line end pose
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
       */
      public boolean hasEnd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Line end pose
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getEnd() {
        return end_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : end_;
      }
      /**
       * <pre>
       * Line end pose
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getEndOrBuilder() {
        return end_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : end_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasStart()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getStart().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (hasEnd()) {
          if (!getEnd().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, getStart());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, getEnd());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getStart());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getEnd());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line)) {
          return super.equals(obj);
        }
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line) obj;

        boolean result = true;
        result = result && (hasStart() == other.hasStart());
        if (hasStart()) {
          result = result && getStart()
              .equals(other.getStart());
        }
        result = result && (hasEnd() == other.hasEnd());
        if (hasEnd()) {
          result = result && getEnd()
              .equals(other.getEnd());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasStart()) {
          hash = (37 * hash) + START_FIELD_NUMBER;
          hash = (53 * hash) + getStart().hashCode();
        }
        if (hasEnd()) {
          hash = (37 * hash) + END_FIELD_NUMBER;
          hash = (53 * hash) + getEnd().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * This message contains one LIDAR line. 
       * </pre>
       *
       * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.LidarLines.Line}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.LidarLines.Line)
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.LineOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_Line_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_Line_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.Builder.class);
        }

        // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getStartFieldBuilder();
            getEndFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (startBuilder_ == null) {
            start_ = null;
          } else {
            startBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          if (endBuilder_ == null) {
            end_ = null;
          } else {
            endBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_Line_descriptor;
        }

        @java.lang.Override
        public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line getDefaultInstanceForType() {
          return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.getDefaultInstance();
        }

        @java.lang.Override
        public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line build() {
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line buildPartial() {
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (startBuilder_ == null) {
            result.start_ = start_;
          } else {
            result.start_ = startBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (endBuilder_ == null) {
            result.end_ = end_;
          } else {
            result.end_ = endBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line) {
            return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line other) {
          if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.getDefaultInstance()) return this;
          if (other.hasStart()) {
            mergeStart(other.getStart());
          }
          if (other.hasEnd()) {
            mergeEnd(other.getEnd());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasStart()) {
            return false;
          }
          if (!getStart().isInitialized()) {
            return false;
          }
          if (hasEnd()) {
            if (!getEnd().isInitialized()) {
              return false;
            }
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose start_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder> startBuilder_;
        /**
         * <pre>
         * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
         * </pre>
         *
         * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
         */
        public boolean hasStart() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
         * </pre>
         *
         * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
         */
        public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getStart() {
          if (startBuilder_ == null) {
            return start_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : start_;
          } else {
            return startBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
         * </pre>
         *
         * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
         */
        public Builder setStart(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose value) {
          if (startBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            start_ = value;
            onChanged();
          } else {
            startBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
         * </pre>
         *
         * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
         */
        public Builder setStart(
            ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder builderForValue) {
          if (startBuilder_ == null) {
            start_ = builderForValue.build();
            onChanged();
          } else {
            startBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
         * </pre>
         *
         * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
         */
        public Builder mergeStart(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose value) {
          if (startBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                start_ != null &&
                start_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance()) {
              start_ =
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.newBuilder(start_).mergeFrom(value).buildPartial();
            } else {
              start_ = value;
            }
            onChanged();
          } else {
            startBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
         * </pre>
         *
         * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
         */
        public Builder clearStart() {
          if (startBuilder_ == null) {
            start_ = null;
            onChanged();
          } else {
            startBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <pre>
         * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
         * </pre>
         *
         * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
         */
        public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder getStartBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getStartFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
         * </pre>
         *
         * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
         */
        public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getStartOrBuilder() {
          if (startBuilder_ != null) {
            return startBuilder_.getMessageOrBuilder();
          } else {
            return start_ == null ?
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : start_;
          }
        }
        /**
         * <pre>
         * Line start pose (note 'alpha' meaningless unless 'end' is not supplied)
         * </pre>
         *
         * <code>required .ch.bfh.roboticsLab.yellow.communication.Pose start = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder> 
            getStartFieldBuilder() {
          if (startBuilder_ == null) {
            startBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder>(
                    getStart(),
                    getParentForChildren(),
                    isClean());
            start_ = null;
          }
          return startBuilder_;
        }

        private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose end_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder> endBuilder_;
        /**
         * <pre>
         * Line end pose
         * </pre>
         *
         * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
         */
        public boolean hasEnd() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         * Line end pose
         * </pre>
         *
         * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
         */
        public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getEnd() {
          if (endBuilder_ == null) {
            return end_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : end_;
          } else {
            return endBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Line end pose
         * </pre>
         *
         * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
         */
        public Builder setEnd(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose value) {
          if (endBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            end_ = value;
            onChanged();
          } else {
            endBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Line end pose
         * </pre>
         *
         * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
         */
        public Builder setEnd(
            ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder builderForValue) {
          if (endBuilder_ == null) {
            end_ = builderForValue.build();
            onChanged();
          } else {
            endBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Line end pose
         * </pre>
         *
         * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
         */
        public Builder mergeEnd(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose value) {
          if (endBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                end_ != null &&
                end_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance()) {
              end_ =
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.newBuilder(end_).mergeFrom(value).buildPartial();
            } else {
              end_ = value;
            }
            onChanged();
          } else {
            endBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <pre>
         * Line end pose
         * </pre>
         *
         * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
         */
        public Builder clearEnd() {
          if (endBuilder_ == null) {
            end_ = null;
            onChanged();
          } else {
            endBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <pre>
         * Line end pose
         * </pre>
         *
         * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
         */
        public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder getEndBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getEndFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Line end pose
         * </pre>
         *
         * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
         */
        public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getEndOrBuilder() {
          if (endBuilder_ != null) {
            return endBuilder_.getMessageOrBuilder();
          } else {
            return end_ == null ?
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : end_;
          }
        }
        /**
         * <pre>
         * Line end pose
         * </pre>
         *
         * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose end = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder> 
            getEndFieldBuilder() {
          if (endBuilder_ == null) {
            endBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder>(
                    getEnd(),
                    getParentForChildren(),
                    isClean());
            end_ = null;
          }
          return endBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.LidarLines.Line)
      }

      // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.LidarLines.Line)
      private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line();
      }

      public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Line>
          PARSER = new com.google.protobuf.AbstractParser<Line>() {
        @java.lang.Override
        public Line parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Line(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Line> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Line> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int LINES_FIELD_NUMBER = 1;
    private java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line> lines_;
    /**
     * <pre>
     * List of lines found in the LIDAR data.
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
     */
    public java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line> getLinesList() {
      return lines_;
    }
    /**
     * <pre>
     * List of lines found in the LIDAR data.
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
     */
    public java.util.List<? extends ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.LineOrBuilder> 
        getLinesOrBuilderList() {
      return lines_;
    }
    /**
     * <pre>
     * List of lines found in the LIDAR data.
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
     */
    public int getLinesCount() {
      return lines_.size();
    }
    /**
     * <pre>
     * List of lines found in the LIDAR data.
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line getLines(int index) {
      return lines_.get(index);
    }
    /**
     * <pre>
     * List of lines found in the LIDAR data.
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.LineOrBuilder getLinesOrBuilder(
        int index) {
      return lines_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getLinesCount(); i++) {
        if (!getLines(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < lines_.size(); i++) {
        output.writeMessage(1, lines_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < lines_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, lines_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines) obj;

      boolean result = true;
      result = result && getLinesList()
          .equals(other.getLinesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLinesCount() > 0) {
        hash = (37 * hash) + LINES_FIELD_NUMBER;
        hash = (53 * hash) + getLinesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * LIDAR lines message
     * This message contains lines extracted from a LIDAR measurement analysis.
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.LidarLines}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.LidarLines)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLinesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (linesBuilder_ == null) {
          lines_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          linesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines(this);
        int from_bitField0_ = bitField0_;
        if (linesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            lines_ = java.util.Collections.unmodifiableList(lines_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.lines_ = lines_;
        } else {
          result.lines_ = linesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.getDefaultInstance()) return this;
        if (linesBuilder_ == null) {
          if (!other.lines_.isEmpty()) {
            if (lines_.isEmpty()) {
              lines_ = other.lines_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLinesIsMutable();
              lines_.addAll(other.lines_);
            }
            onChanged();
          }
        } else {
          if (!other.lines_.isEmpty()) {
            if (linesBuilder_.isEmpty()) {
              linesBuilder_.dispose();
              linesBuilder_ = null;
              lines_ = other.lines_;
              bitField0_ = (bitField0_ & ~0x00000001);
              linesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLinesFieldBuilder() : null;
            } else {
              linesBuilder_.addAllMessages(other.lines_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getLinesCount(); i++) {
          if (!getLines(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line> lines_ =
        java.util.Collections.emptyList();
      private void ensureLinesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          lines_ = new java.util.ArrayList<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line>(lines_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.LineOrBuilder> linesBuilder_;

      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line> getLinesList() {
        if (linesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lines_);
        } else {
          return linesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public int getLinesCount() {
        if (linesBuilder_ == null) {
          return lines_.size();
        } else {
          return linesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line getLines(int index) {
        if (linesBuilder_ == null) {
          return lines_.get(index);
        } else {
          return linesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public Builder setLines(
          int index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line value) {
        if (linesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinesIsMutable();
          lines_.set(index, value);
          onChanged();
        } else {
          linesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public Builder setLines(
          int index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.Builder builderForValue) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          lines_.set(index, builderForValue.build());
          onChanged();
        } else {
          linesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public Builder addLines(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line value) {
        if (linesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinesIsMutable();
          lines_.add(value);
          onChanged();
        } else {
          linesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public Builder addLines(
          int index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line value) {
        if (linesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinesIsMutable();
          lines_.add(index, value);
          onChanged();
        } else {
          linesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public Builder addLines(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.Builder builderForValue) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          lines_.add(builderForValue.build());
          onChanged();
        } else {
          linesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public Builder addLines(
          int index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.Builder builderForValue) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          lines_.add(index, builderForValue.build());
          onChanged();
        } else {
          linesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public Builder addAllLines(
          java.lang.Iterable<? extends ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line> values) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lines_);
          onChanged();
        } else {
          linesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public Builder clearLines() {
        if (linesBuilder_ == null) {
          lines_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          linesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public Builder removeLines(int index) {
        if (linesBuilder_ == null) {
          ensureLinesIsMutable();
          lines_.remove(index);
          onChanged();
        } else {
          linesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.Builder getLinesBuilder(
          int index) {
        return getLinesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.LineOrBuilder getLinesOrBuilder(
          int index) {
        if (linesBuilder_ == null) {
          return lines_.get(index);  } else {
          return linesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public java.util.List<? extends ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.LineOrBuilder> 
           getLinesOrBuilderList() {
        if (linesBuilder_ != null) {
          return linesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lines_);
        }
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.Builder addLinesBuilder() {
        return getLinesFieldBuilder().addBuilder(
            ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.getDefaultInstance());
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.Builder addLinesBuilder(
          int index) {
        return getLinesFieldBuilder().addBuilder(
            index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.getDefaultInstance());
      }
      /**
       * <pre>
       * List of lines found in the LIDAR data.
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.LidarLines.Line lines = 1;</code>
       */
      public java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.Builder> 
           getLinesBuilderList() {
        return getLinesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.LineOrBuilder> 
          getLinesFieldBuilder() {
        if (linesBuilder_ == null) {
          linesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Line.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.LineOrBuilder>(
                  lines_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          lines_ = null;
        }
        return linesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.LidarLines)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.LidarLines)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LidarLines>
        PARSER = new com.google.protobuf.AbstractParser<LidarLines>() {
      @java.lang.Override
      public LidarLines parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LidarLines(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LidarLines> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LidarLines> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IRSensorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.IRSensor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * IR sensor measurement [m]
     * </pre>
     *
     * <code>required float distance = 1;</code>
     */
    boolean hasDistance();
    /**
     * <pre>
     * IR sensor measurement [m]
     * </pre>
     *
     * <code>required float distance = 1;</code>
     */
    float getDistance();
  }
  /**
   * <pre>
   * Infrared sensor measurement message.
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.IRSensor}
   */
  public  static final class IRSensor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.IRSensor)
      IRSensorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IRSensor.newBuilder() to construct.
    private IRSensor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IRSensor() {
      distance_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IRSensor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              distance_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.Builder.class);
    }

    private int bitField0_;
    public static final int DISTANCE_FIELD_NUMBER = 1;
    private float distance_;
    /**
     * <pre>
     * IR sensor measurement [m]
     * </pre>
     *
     * <code>required float distance = 1;</code>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * IR sensor measurement [m]
     * </pre>
     *
     * <code>required float distance = 1;</code>
     */
    public float getDistance() {
      return distance_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDistance()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, distance_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, distance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor) obj;

      boolean result = true;
      result = result && (hasDistance() == other.hasDistance());
      if (hasDistance()) {
        result = result && (
            java.lang.Float.floatToIntBits(getDistance())
            == java.lang.Float.floatToIntBits(
                other.getDistance()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDistance()) {
        hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDistance());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Infrared sensor measurement message.
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.IRSensor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.IRSensor)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        distance_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensor_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.distance_ = distance_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.getDefaultInstance()) return this;
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasDistance()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float distance_ ;
      /**
       * <pre>
       * IR sensor measurement [m]
       * </pre>
       *
       * <code>required float distance = 1;</code>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * IR sensor measurement [m]
       * </pre>
       *
       * <code>required float distance = 1;</code>
       */
      public float getDistance() {
        return distance_;
      }
      /**
       * <pre>
       * IR sensor measurement [m]
       * </pre>
       *
       * <code>required float distance = 1;</code>
       */
      public Builder setDistance(float value) {
        bitField0_ |= 0x00000001;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IR sensor measurement [m]
       * </pre>
       *
       * <code>required float distance = 1;</code>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000001);
        distance_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.IRSensor)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.IRSensor)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<IRSensor>
        PARSER = new com.google.protobuf.AbstractParser<IRSensor>() {
      @java.lang.Override
      public IRSensor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IRSensor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IRSensor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IRSensor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IRSensorsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.IRSensors)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    int getTimestamp();

    /**
     * <pre>
     * Array of IR sensors
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
     */
    java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor> 
        getSensorList();
    /**
     * <pre>
     * Array of IR sensors
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor getSensor(int index);
    /**
     * <pre>
     * Array of IR sensors
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
     */
    int getSensorCount();
    /**
     * <pre>
     * Array of IR sensors
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
     */
    java.util.List<? extends ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorOrBuilder> 
        getSensorOrBuilderList();
    /**
     * <pre>
     * Array of IR sensors
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorOrBuilder getSensorOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Infrared sensor array measurement message.
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.IRSensors}
   */
  public  static final class IRSensors extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.IRSensors)
      IRSensorsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IRSensors.newBuilder() to construct.
    private IRSensors(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IRSensors() {
      timestamp_ = 0;
      sensor_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IRSensors(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sensor_ = new java.util.ArrayList<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor>();
                mutable_bitField0_ |= 0x00000002;
              }
              sensor_.add(
                  input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sensor_ = java.util.Collections.unmodifiableList(sensor_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensors_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensors_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private int timestamp_;
    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int SENSOR_FIELD_NUMBER = 2;
    private java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor> sensor_;
    /**
     * <pre>
     * Array of IR sensors
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
     */
    public java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor> getSensorList() {
      return sensor_;
    }
    /**
     * <pre>
     * Array of IR sensors
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
     */
    public java.util.List<? extends ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorOrBuilder> 
        getSensorOrBuilderList() {
      return sensor_;
    }
    /**
     * <pre>
     * Array of IR sensors
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
     */
    public int getSensorCount() {
      return sensor_.size();
    }
    /**
     * <pre>
     * Array of IR sensors
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor getSensor(int index) {
      return sensor_.get(index);
    }
    /**
     * <pre>
     * Array of IR sensors
     * </pre>
     *
     * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorOrBuilder getSensorOrBuilder(
        int index) {
      return sensor_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getSensorCount(); i++) {
        if (!getSensor(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, timestamp_);
      }
      for (int i = 0; i < sensor_.size(); i++) {
        output.writeMessage(2, sensor_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, timestamp_);
      }
      for (int i = 0; i < sensor_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sensor_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors) obj;

      boolean result = true;
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (getTimestamp()
            == other.getTimestamp());
      }
      result = result && getSensorList()
          .equals(other.getSensorList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp();
      }
      if (getSensorCount() > 0) {
        hash = (37 * hash) + SENSOR_FIELD_NUMBER;
        hash = (53 * hash) + getSensorList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Infrared sensor array measurement message.
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.IRSensors}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.IRSensors)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensors_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensors_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSensorFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sensorBuilder_ == null) {
          sensor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sensorBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensors_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (sensorBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            sensor_ = java.util.Collections.unmodifiableList(sensor_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sensor_ = sensor_;
        } else {
          result.sensor_ = sensorBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (sensorBuilder_ == null) {
          if (!other.sensor_.isEmpty()) {
            if (sensor_.isEmpty()) {
              sensor_ = other.sensor_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSensorIsMutable();
              sensor_.addAll(other.sensor_);
            }
            onChanged();
          }
        } else {
          if (!other.sensor_.isEmpty()) {
            if (sensorBuilder_.isEmpty()) {
              sensorBuilder_.dispose();
              sensorBuilder_ = null;
              sensor_ = other.sensor_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sensorBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSensorFieldBuilder() : null;
            } else {
              sensorBuilder_.addAllMessages(other.sensor_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getSensorCount(); i++) {
          if (!getSensor(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int timestamp_ ;
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor> sensor_ =
        java.util.Collections.emptyList();
      private void ensureSensorIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sensor_ = new java.util.ArrayList<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor>(sensor_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorOrBuilder> sensorBuilder_;

      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor> getSensorList() {
        if (sensorBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sensor_);
        } else {
          return sensorBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public int getSensorCount() {
        if (sensorBuilder_ == null) {
          return sensor_.size();
        } else {
          return sensorBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor getSensor(int index) {
        if (sensorBuilder_ == null) {
          return sensor_.get(index);
        } else {
          return sensorBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public Builder setSensor(
          int index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor value) {
        if (sensorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorIsMutable();
          sensor_.set(index, value);
          onChanged();
        } else {
          sensorBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public Builder setSensor(
          int index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.Builder builderForValue) {
        if (sensorBuilder_ == null) {
          ensureSensorIsMutable();
          sensor_.set(index, builderForValue.build());
          onChanged();
        } else {
          sensorBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public Builder addSensor(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor value) {
        if (sensorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorIsMutable();
          sensor_.add(value);
          onChanged();
        } else {
          sensorBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public Builder addSensor(
          int index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor value) {
        if (sensorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorIsMutable();
          sensor_.add(index, value);
          onChanged();
        } else {
          sensorBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public Builder addSensor(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.Builder builderForValue) {
        if (sensorBuilder_ == null) {
          ensureSensorIsMutable();
          sensor_.add(builderForValue.build());
          onChanged();
        } else {
          sensorBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public Builder addSensor(
          int index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.Builder builderForValue) {
        if (sensorBuilder_ == null) {
          ensureSensorIsMutable();
          sensor_.add(index, builderForValue.build());
          onChanged();
        } else {
          sensorBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public Builder addAllSensor(
          java.lang.Iterable<? extends ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor> values) {
        if (sensorBuilder_ == null) {
          ensureSensorIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sensor_);
          onChanged();
        } else {
          sensorBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public Builder clearSensor() {
        if (sensorBuilder_ == null) {
          sensor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sensorBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public Builder removeSensor(int index) {
        if (sensorBuilder_ == null) {
          ensureSensorIsMutable();
          sensor_.remove(index);
          onChanged();
        } else {
          sensorBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.Builder getSensorBuilder(
          int index) {
        return getSensorFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorOrBuilder getSensorOrBuilder(
          int index) {
        if (sensorBuilder_ == null) {
          return sensor_.get(index);  } else {
          return sensorBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public java.util.List<? extends ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorOrBuilder> 
           getSensorOrBuilderList() {
        if (sensorBuilder_ != null) {
          return sensorBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sensor_);
        }
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.Builder addSensorBuilder() {
        return getSensorFieldBuilder().addBuilder(
            ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.getDefaultInstance());
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.Builder addSensorBuilder(
          int index) {
        return getSensorFieldBuilder().addBuilder(
            index, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.getDefaultInstance());
      }
      /**
       * <pre>
       * Array of IR sensors
       * </pre>
       *
       * <code>repeated .ch.bfh.roboticsLab.yellow.communication.IRSensor sensor = 2;</code>
       */
      public java.util.List<ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.Builder> 
           getSensorBuilderList() {
        return getSensorFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorOrBuilder> 
          getSensorFieldBuilder() {
        if (sensorBuilder_ == null) {
          sensorBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensor.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorOrBuilder>(
                  sensor_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          sensor_ = null;
        }
        return sensorBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.IRSensors)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.IRSensors)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<IRSensors>
        PARSER = new com.google.protobuf.AbstractParser<IRSensors>() {
      @java.lang.Override
      public IRSensors parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IRSensors(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IRSensors> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IRSensors> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TelemetryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.Telemetry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    int getTimestamp();

    /**
     * <pre>
     * Current robot state
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
     */
    boolean hasState();
    /**
     * <pre>
     * Current robot state
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State getState();
    /**
     * <pre>
     * Current robot state
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateOrBuilder getStateOrBuilder();

    /**
     * <pre>
     * Current estimated odometry
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
     */
    boolean hasOdometry();
    /**
     * <pre>
     * Current estimated odometry
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry getOdometry();
    /**
     * <pre>
     * Current estimated odometry
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.OdometryOrBuilder getOdometryOrBuilder();

    /**
     * <pre>
     * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
     */
    boolean hasLidar();
    /**
     * <pre>
     * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar getLidar();
    /**
     * <pre>
     * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarOrBuilder getLidarOrBuilder();

    /**
     * <pre>
     * Lines found by analysis of LIDA data
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
     */
    boolean hasLidarLines();
    /**
     * <pre>
     * Lines found by analysis of LIDA data
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines getLidarLines();
    /**
     * <pre>
     * Lines found by analysis of LIDA data
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesOrBuilder getLidarLinesOrBuilder();

    /**
     * <pre>
     * Latest IR array sensor measyrment
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
     */
    boolean hasIr();
    /**
     * <pre>
     * Latest IR array sensor measyrment
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors getIr();
    /**
     * <pre>
     * Latest IR array sensor measyrment
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorsOrBuilder getIrOrBuilder();
  }
  /**
   * <pre>
   * Telemetry message.
   * This message is sent by the robot at regular intervals.
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.Telemetry}
   */
  public  static final class Telemetry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.Telemetry)
      TelemetryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Telemetry.newBuilder() to construct.
    private Telemetry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Telemetry() {
      timestamp_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Telemetry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readUInt32();
              break;
            }
            case 18: {
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = state_.toBuilder();
              }
              state_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(state_);
                state_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = odometry_.toBuilder();
              }
              odometry_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(odometry_);
                odometry_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = lidar_.toBuilder();
              }
              lidar_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lidar_);
                lidar_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = lidarLines_.toBuilder();
              }
              lidarLines_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lidarLines_);
                lidarLines_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = ir_.toBuilder();
              }
              ir_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ir_);
                ir_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Telemetry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Telemetry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private int timestamp_;
    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int STATE_FIELD_NUMBER = 2;
    private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State state_;
    /**
     * <pre>
     * Current robot state
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Current robot state
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State getState() {
      return state_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.getDefaultInstance() : state_;
    }
    /**
     * <pre>
     * Current robot state
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateOrBuilder getStateOrBuilder() {
      return state_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.getDefaultInstance() : state_;
    }

    public static final int ODOMETRY_FIELD_NUMBER = 3;
    private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry odometry_;
    /**
     * <pre>
     * Current estimated odometry
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
     */
    public boolean hasOdometry() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Current estimated odometry
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry getOdometry() {
      return odometry_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.getDefaultInstance() : odometry_;
    }
    /**
     * <pre>
     * Current estimated odometry
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.OdometryOrBuilder getOdometryOrBuilder() {
      return odometry_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.getDefaultInstance() : odometry_;
    }

    public static final int LIDAR_FIELD_NUMBER = 4;
    private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar lidar_;
    /**
     * <pre>
     * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
     */
    public boolean hasLidar() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar getLidar() {
      return lidar_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.getDefaultInstance() : lidar_;
    }
    /**
     * <pre>
     * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarOrBuilder getLidarOrBuilder() {
      return lidar_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.getDefaultInstance() : lidar_;
    }

    public static final int LIDARLINES_FIELD_NUMBER = 5;
    private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines lidarLines_;
    /**
     * <pre>
     * Lines found by analysis of LIDA data
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
     */
    public boolean hasLidarLines() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Lines found by analysis of LIDA data
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines getLidarLines() {
      return lidarLines_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.getDefaultInstance() : lidarLines_;
    }
    /**
     * <pre>
     * Lines found by analysis of LIDA data
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesOrBuilder getLidarLinesOrBuilder() {
      return lidarLines_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.getDefaultInstance() : lidarLines_;
    }

    public static final int IR_FIELD_NUMBER = 6;
    private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors ir_;
    /**
     * <pre>
     * Latest IR array sensor measyrment
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
     */
    public boolean hasIr() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Latest IR array sensor measyrment
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors getIr() {
      return ir_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.getDefaultInstance() : ir_;
    }
    /**
     * <pre>
     * Latest IR array sensor measyrment
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorsOrBuilder getIrOrBuilder() {
      return ir_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.getDefaultInstance() : ir_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasState()) {
        if (!getState().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasOdometry()) {
        if (!getOdometry().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLidar()) {
        if (!getLidar().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLidarLines()) {
        if (!getLidarLines().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasIr()) {
        if (!getIr().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getState());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getOdometry());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getLidar());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getLidarLines());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, getIr());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getState());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOdometry());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLidar());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getLidarLines());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getIr());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry) obj;

      boolean result = true;
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (getTimestamp()
            == other.getTimestamp());
      }
      result = result && (hasState() == other.hasState());
      if (hasState()) {
        result = result && getState()
            .equals(other.getState());
      }
      result = result && (hasOdometry() == other.hasOdometry());
      if (hasOdometry()) {
        result = result && getOdometry()
            .equals(other.getOdometry());
      }
      result = result && (hasLidar() == other.hasLidar());
      if (hasLidar()) {
        result = result && getLidar()
            .equals(other.getLidar());
      }
      result = result && (hasLidarLines() == other.hasLidarLines());
      if (hasLidarLines()) {
        result = result && getLidarLines()
            .equals(other.getLidarLines());
      }
      result = result && (hasIr() == other.hasIr());
      if (hasIr()) {
        result = result && getIr()
            .equals(other.getIr());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp();
      }
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + getState().hashCode();
      }
      if (hasOdometry()) {
        hash = (37 * hash) + ODOMETRY_FIELD_NUMBER;
        hash = (53 * hash) + getOdometry().hashCode();
      }
      if (hasLidar()) {
        hash = (37 * hash) + LIDAR_FIELD_NUMBER;
        hash = (53 * hash) + getLidar().hashCode();
      }
      if (hasLidarLines()) {
        hash = (37 * hash) + LIDARLINES_FIELD_NUMBER;
        hash = (53 * hash) + getLidarLines().hashCode();
      }
      if (hasIr()) {
        hash = (37 * hash) + IR_FIELD_NUMBER;
        hash = (53 * hash) + getIr().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Telemetry message.
     * This message is sent by the robot at regular intervals.
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.Telemetry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.Telemetry)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelemetryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Telemetry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Telemetry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStateFieldBuilder();
          getOdometryFieldBuilder();
          getLidarFieldBuilder();
          getLidarLinesFieldBuilder();
          getIrFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (stateBuilder_ == null) {
          state_ = null;
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (odometryBuilder_ == null) {
          odometry_ = null;
        } else {
          odometryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (lidarBuilder_ == null) {
          lidar_ = null;
        } else {
          lidarBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (lidarLinesBuilder_ == null) {
          lidarLines_ = null;
        } else {
          lidarLinesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (irBuilder_ == null) {
          ir_ = null;
        } else {
          irBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Telemetry_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (stateBuilder_ == null) {
          result.state_ = state_;
        } else {
          result.state_ = stateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (odometryBuilder_ == null) {
          result.odometry_ = odometry_;
        } else {
          result.odometry_ = odometryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (lidarBuilder_ == null) {
          result.lidar_ = lidar_;
        } else {
          result.lidar_ = lidarBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (lidarLinesBuilder_ == null) {
          result.lidarLines_ = lidarLines_;
        } else {
          result.lidarLines_ = lidarLinesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (irBuilder_ == null) {
          result.ir_ = ir_;
        } else {
          result.ir_ = irBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        if (other.hasOdometry()) {
          mergeOdometry(other.getOdometry());
        }
        if (other.hasLidar()) {
          mergeLidar(other.getLidar());
        }
        if (other.hasLidarLines()) {
          mergeLidarLines(other.getLidarLines());
        }
        if (other.hasIr()) {
          mergeIr(other.getIr());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasState()) {
          if (!getState().isInitialized()) {
            return false;
          }
        }
        if (hasOdometry()) {
          if (!getOdometry().isInitialized()) {
            return false;
          }
        }
        if (hasLidar()) {
          if (!getLidar().isInitialized()) {
            return false;
          }
        }
        if (hasLidarLines()) {
          if (!getLidarLines().isInitialized()) {
            return false;
          }
        }
        if (hasIr()) {
          if (!getIr().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int timestamp_ ;
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State state_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateOrBuilder> stateBuilder_;
      /**
       * <pre>
       * Current robot state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Current robot state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State getState() {
        if (stateBuilder_ == null) {
          return state_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.getDefaultInstance() : state_;
        } else {
          return stateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Current robot state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public Builder setState(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State value) {
        if (stateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          state_ = value;
          onChanged();
        } else {
          stateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Current robot state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public Builder setState(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder builderForValue) {
        if (stateBuilder_ == null) {
          state_ = builderForValue.build();
          onChanged();
        } else {
          stateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Current robot state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public Builder mergeState(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State value) {
        if (stateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              state_ != null &&
              state_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.getDefaultInstance()) {
            state_ =
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.newBuilder(state_).mergeFrom(value).buildPartial();
          } else {
            state_ = value;
          }
          onChanged();
        } else {
          stateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Current robot state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public Builder clearState() {
        if (stateBuilder_ == null) {
          state_ = null;
          onChanged();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * Current robot state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder getStateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Current robot state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateOrBuilder getStateOrBuilder() {
        if (stateBuilder_ != null) {
          return stateBuilder_.getMessageOrBuilder();
        } else {
          return state_ == null ?
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.getDefaultInstance() : state_;
        }
      }
      /**
       * <pre>
       * Current robot state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateOrBuilder> 
          getStateFieldBuilder() {
        if (stateBuilder_ == null) {
          stateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateOrBuilder>(
                  getState(),
                  getParentForChildren(),
                  isClean());
          state_ = null;
        }
        return stateBuilder_;
      }

      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry odometry_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.OdometryOrBuilder> odometryBuilder_;
      /**
       * <pre>
       * Current estimated odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
       */
      public boolean hasOdometry() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Current estimated odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry getOdometry() {
        if (odometryBuilder_ == null) {
          return odometry_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.getDefaultInstance() : odometry_;
        } else {
          return odometryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Current estimated odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
       */
      public Builder setOdometry(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry value) {
        if (odometryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          odometry_ = value;
          onChanged();
        } else {
          odometryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Current estimated odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
       */
      public Builder setOdometry(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.Builder builderForValue) {
        if (odometryBuilder_ == null) {
          odometry_ = builderForValue.build();
          onChanged();
        } else {
          odometryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Current estimated odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
       */
      public Builder mergeOdometry(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry value) {
        if (odometryBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              odometry_ != null &&
              odometry_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.getDefaultInstance()) {
            odometry_ =
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.newBuilder(odometry_).mergeFrom(value).buildPartial();
          } else {
            odometry_ = value;
          }
          onChanged();
        } else {
          odometryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Current estimated odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
       */
      public Builder clearOdometry() {
        if (odometryBuilder_ == null) {
          odometry_ = null;
          onChanged();
        } else {
          odometryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * Current estimated odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.Builder getOdometryBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getOdometryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Current estimated odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.OdometryOrBuilder getOdometryOrBuilder() {
        if (odometryBuilder_ != null) {
          return odometryBuilder_.getMessageOrBuilder();
        } else {
          return odometry_ == null ?
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.getDefaultInstance() : odometry_;
        }
      }
      /**
       * <pre>
       * Current estimated odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Odometry odometry = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.OdometryOrBuilder> 
          getOdometryFieldBuilder() {
        if (odometryBuilder_ == null) {
          odometryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Odometry.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.OdometryOrBuilder>(
                  getOdometry(),
                  getParentForChildren(),
                  isClean());
          odometry_ = null;
        }
        return odometryBuilder_;
      }

      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar lidar_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarOrBuilder> lidarBuilder_;
      /**
       * <pre>
       * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
       */
      public boolean hasLidar() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar getLidar() {
        if (lidarBuilder_ == null) {
          return lidar_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.getDefaultInstance() : lidar_;
        } else {
          return lidarBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
       */
      public Builder setLidar(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar value) {
        if (lidarBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lidar_ = value;
          onChanged();
        } else {
          lidarBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
       */
      public Builder setLidar(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.Builder builderForValue) {
        if (lidarBuilder_ == null) {
          lidar_ = builderForValue.build();
          onChanged();
        } else {
          lidarBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
       */
      public Builder mergeLidar(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar value) {
        if (lidarBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              lidar_ != null &&
              lidar_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.getDefaultInstance()) {
            lidar_ =
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.newBuilder(lidar_).mergeFrom(value).buildPartial();
          } else {
            lidar_ = value;
          }
          onChanged();
        } else {
          lidarBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
       */
      public Builder clearLidar() {
        if (lidarBuilder_ == null) {
          lidar_ = null;
          onChanged();
        } else {
          lidarBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.Builder getLidarBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLidarFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarOrBuilder getLidarOrBuilder() {
        if (lidarBuilder_ != null) {
          return lidarBuilder_.getMessageOrBuilder();
        } else {
          return lidar_ == null ?
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.getDefaultInstance() : lidar_;
        }
      }
      /**
       * <pre>
       * Latest lidar measurement. Note that sending this component will add a large vector of 360 LidarPoints to the message, use wisely
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Lidar lidar = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarOrBuilder> 
          getLidarFieldBuilder() {
        if (lidarBuilder_ == null) {
          lidarBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Lidar.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarOrBuilder>(
                  getLidar(),
                  getParentForChildren(),
                  isClean());
          lidar_ = null;
        }
        return lidarBuilder_;
      }

      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines lidarLines_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesOrBuilder> lidarLinesBuilder_;
      /**
       * <pre>
       * Lines found by analysis of LIDA data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
       */
      public boolean hasLidarLines() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Lines found by analysis of LIDA data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines getLidarLines() {
        if (lidarLinesBuilder_ == null) {
          return lidarLines_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.getDefaultInstance() : lidarLines_;
        } else {
          return lidarLinesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Lines found by analysis of LIDA data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
       */
      public Builder setLidarLines(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines value) {
        if (lidarLinesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lidarLines_ = value;
          onChanged();
        } else {
          lidarLinesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Lines found by analysis of LIDA data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
       */
      public Builder setLidarLines(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Builder builderForValue) {
        if (lidarLinesBuilder_ == null) {
          lidarLines_ = builderForValue.build();
          onChanged();
        } else {
          lidarLinesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Lines found by analysis of LIDA data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
       */
      public Builder mergeLidarLines(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines value) {
        if (lidarLinesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              lidarLines_ != null &&
              lidarLines_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.getDefaultInstance()) {
            lidarLines_ =
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.newBuilder(lidarLines_).mergeFrom(value).buildPartial();
          } else {
            lidarLines_ = value;
          }
          onChanged();
        } else {
          lidarLinesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Lines found by analysis of LIDA data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
       */
      public Builder clearLidarLines() {
        if (lidarLinesBuilder_ == null) {
          lidarLines_ = null;
          onChanged();
        } else {
          lidarLinesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <pre>
       * Lines found by analysis of LIDA data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Builder getLidarLinesBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getLidarLinesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Lines found by analysis of LIDA data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesOrBuilder getLidarLinesOrBuilder() {
        if (lidarLinesBuilder_ != null) {
          return lidarLinesBuilder_.getMessageOrBuilder();
        } else {
          return lidarLines_ == null ?
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.getDefaultInstance() : lidarLines_;
        }
      }
      /**
       * <pre>
       * Lines found by analysis of LIDA data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLines lidarLines = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesOrBuilder> 
          getLidarLinesFieldBuilder() {
        if (lidarLinesBuilder_ == null) {
          lidarLinesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLines.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesOrBuilder>(
                  getLidarLines(),
                  getParentForChildren(),
                  isClean());
          lidarLines_ = null;
        }
        return lidarLinesBuilder_;
      }

      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors ir_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorsOrBuilder> irBuilder_;
      /**
       * <pre>
       * Latest IR array sensor measyrment
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
       */
      public boolean hasIr() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Latest IR array sensor measyrment
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors getIr() {
        if (irBuilder_ == null) {
          return ir_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.getDefaultInstance() : ir_;
        } else {
          return irBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Latest IR array sensor measyrment
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
       */
      public Builder setIr(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors value) {
        if (irBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ir_ = value;
          onChanged();
        } else {
          irBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Latest IR array sensor measyrment
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
       */
      public Builder setIr(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.Builder builderForValue) {
        if (irBuilder_ == null) {
          ir_ = builderForValue.build();
          onChanged();
        } else {
          irBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Latest IR array sensor measyrment
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
       */
      public Builder mergeIr(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors value) {
        if (irBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              ir_ != null &&
              ir_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.getDefaultInstance()) {
            ir_ =
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.newBuilder(ir_).mergeFrom(value).buildPartial();
          } else {
            ir_ = value;
          }
          onChanged();
        } else {
          irBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Latest IR array sensor measyrment
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
       */
      public Builder clearIr() {
        if (irBuilder_ == null) {
          ir_ = null;
          onChanged();
        } else {
          irBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <pre>
       * Latest IR array sensor measyrment
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.Builder getIrBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getIrFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Latest IR array sensor measyrment
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorsOrBuilder getIrOrBuilder() {
        if (irBuilder_ != null) {
          return irBuilder_.getMessageOrBuilder();
        } else {
          return ir_ == null ?
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.getDefaultInstance() : ir_;
        }
      }
      /**
       * <pre>
       * Latest IR array sensor measyrment
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.IRSensors ir = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorsOrBuilder> 
          getIrFieldBuilder() {
        if (irBuilder_ == null) {
          irBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensors.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.IRSensorsOrBuilder>(
                  getIr(),
                  getParentForChildren(),
                  isClean());
          ir_ = null;
        }
        return irBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.Telemetry)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.Telemetry)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Telemetry>
        PARSER = new com.google.protobuf.AbstractParser<Telemetry>() {
      @java.lang.Override
      public Telemetry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Telemetry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Telemetry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Telemetry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telemetry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VelocitiesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.Velocities)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float linearSpeed = 1;</code>
     */
    boolean hasLinearSpeed();
    /**
     * <code>required float linearSpeed = 1;</code>
     */
    float getLinearSpeed();

    /**
     * <code>required float angularSpeed = 2;</code>
     */
    boolean hasAngularSpeed();
    /**
     * <code>required float angularSpeed = 2;</code>
     */
    float getAngularSpeed();
  }
  /**
   * <pre>
   * Velocities command
   * This command sends desired linear and angular speeds.
   * The command is used continuously in the Manual state (e.g. joystick input) or
   * in the AUTO states to set desired maximum speeds.
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.Velocities}
   */
  public  static final class Velocities extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.Velocities)
      VelocitiesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Velocities.newBuilder() to construct.
    private Velocities(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Velocities() {
      linearSpeed_ = 0F;
      angularSpeed_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Velocities(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              linearSpeed_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              angularSpeed_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Velocities_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Velocities_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.Builder.class);
    }

    private int bitField0_;
    public static final int LINEARSPEED_FIELD_NUMBER = 1;
    private float linearSpeed_;
    /**
     * <code>required float linearSpeed = 1;</code>
     */
    public boolean hasLinearSpeed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float linearSpeed = 1;</code>
     */
    public float getLinearSpeed() {
      return linearSpeed_;
    }

    public static final int ANGULARSPEED_FIELD_NUMBER = 2;
    private float angularSpeed_;
    /**
     * <code>required float angularSpeed = 2;</code>
     */
    public boolean hasAngularSpeed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float angularSpeed = 2;</code>
     */
    public float getAngularSpeed() {
      return angularSpeed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLinearSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAngularSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, linearSpeed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, angularSpeed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, linearSpeed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, angularSpeed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities) obj;

      boolean result = true;
      result = result && (hasLinearSpeed() == other.hasLinearSpeed());
      if (hasLinearSpeed()) {
        result = result && (
            java.lang.Float.floatToIntBits(getLinearSpeed())
            == java.lang.Float.floatToIntBits(
                other.getLinearSpeed()));
      }
      result = result && (hasAngularSpeed() == other.hasAngularSpeed());
      if (hasAngularSpeed()) {
        result = result && (
            java.lang.Float.floatToIntBits(getAngularSpeed())
            == java.lang.Float.floatToIntBits(
                other.getAngularSpeed()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLinearSpeed()) {
        hash = (37 * hash) + LINEARSPEED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getLinearSpeed());
      }
      if (hasAngularSpeed()) {
        hash = (37 * hash) + ANGULARSPEED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAngularSpeed());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Velocities command
     * This command sends desired linear and angular speeds.
     * The command is used continuously in the Manual state (e.g. joystick input) or
     * in the AUTO states to set desired maximum speeds.
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.Velocities}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.Velocities)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.VelocitiesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Velocities_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Velocities_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        linearSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        angularSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Velocities_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.linearSpeed_ = linearSpeed_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.angularSpeed_ = angularSpeed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.getDefaultInstance()) return this;
        if (other.hasLinearSpeed()) {
          setLinearSpeed(other.getLinearSpeed());
        }
        if (other.hasAngularSpeed()) {
          setAngularSpeed(other.getAngularSpeed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasLinearSpeed()) {
          return false;
        }
        if (!hasAngularSpeed()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float linearSpeed_ ;
      /**
       * <code>required float linearSpeed = 1;</code>
       */
      public boolean hasLinearSpeed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float linearSpeed = 1;</code>
       */
      public float getLinearSpeed() {
        return linearSpeed_;
      }
      /**
       * <code>required float linearSpeed = 1;</code>
       */
      public Builder setLinearSpeed(float value) {
        bitField0_ |= 0x00000001;
        linearSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float linearSpeed = 1;</code>
       */
      public Builder clearLinearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        linearSpeed_ = 0F;
        onChanged();
        return this;
      }

      private float angularSpeed_ ;
      /**
       * <code>required float angularSpeed = 2;</code>
       */
      public boolean hasAngularSpeed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float angularSpeed = 2;</code>
       */
      public float getAngularSpeed() {
        return angularSpeed_;
      }
      /**
       * <code>required float angularSpeed = 2;</code>
       */
      public Builder setAngularSpeed(float value) {
        bitField0_ |= 0x00000002;
        angularSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float angularSpeed = 2;</code>
       */
      public Builder clearAngularSpeed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        angularSpeed_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.Velocities)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.Velocities)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Velocities>
        PARSER = new com.google.protobuf.AbstractParser<Velocities>() {
      @java.lang.Override
      public Velocities parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Velocities(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Velocities> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Velocities> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReactiveNavigationParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Minimum IR sensor distance to allow forward motion [m]. Default 0.1
     * </pre>
     *
     * <code>optional float minDistance = 1;</code>
     */
    boolean hasMinDistance();
    /**
     * <pre>
     * Minimum IR sensor distance to allow forward motion [m]. Default 0.1
     * </pre>
     *
     * <code>optional float minDistance = 1;</code>
     */
    float getMinDistance();

    /**
     * <pre>
     * Maximum IR sensor distance for forward motion [m]. Default 0.4
     * </pre>
     *
     * <code>optional float maxDistance = 2;</code>
     */
    boolean hasMaxDistance();
    /**
     * <pre>
     * Maximum IR sensor distance for forward motion [m]. Default 0.4
     * </pre>
     *
     * <code>optional float maxDistance = 2;</code>
     */
    float getMaxDistance();

    /**
     * <pre>
     * Translational nominal (max) velocity [m/s]. Default 1.5
     * </pre>
     *
     * <code>optional float translationalVelocity = 3;</code>
     */
    boolean hasTranslationalVelocity();
    /**
     * <pre>
     * Translational nominal (max) velocity [m/s]. Default 1.5
     * </pre>
     *
     * <code>optional float translationalVelocity = 3;</code>
     */
    float getTranslationalVelocity();

    /**
     * <pre>
     * Rotational velocity controller gain [rad/s /m]. Default 10.0
     * </pre>
     *
     * <code>optional float rotationalVelocityGain = 4;</code>
     */
    boolean hasRotationalVelocityGain();
    /**
     * <pre>
     * Rotational velocity controller gain [rad/s /m]. Default 10.0
     * </pre>
     *
     * <code>optional float rotationalVelocityGain = 4;</code>
     */
    float getRotationalVelocityGain();
  }
  /**
   * <pre>
   * Reactive navigation parameters.
   * If a parameter is set to less than 0, the default value will be reset.
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters}
   */
  public  static final class ReactiveNavigationParameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters)
      ReactiveNavigationParametersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReactiveNavigationParameters.newBuilder() to construct.
    private ReactiveNavigationParameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReactiveNavigationParameters() {
      minDistance_ = 0F;
      maxDistance_ = 0F;
      translationalVelocity_ = 0F;
      rotationalVelocityGain_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ReactiveNavigationParameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              minDistance_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              maxDistance_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              translationalVelocity_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              rotationalVelocityGain_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_ReactiveNavigationParameters_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_ReactiveNavigationParameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.Builder.class);
    }

    private int bitField0_;
    public static final int MINDISTANCE_FIELD_NUMBER = 1;
    private float minDistance_;
    /**
     * <pre>
     * Minimum IR sensor distance to allow forward motion [m]. Default 0.1
     * </pre>
     *
     * <code>optional float minDistance = 1;</code>
     */
    public boolean hasMinDistance() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Minimum IR sensor distance to allow forward motion [m]. Default 0.1
     * </pre>
     *
     * <code>optional float minDistance = 1;</code>
     */
    public float getMinDistance() {
      return minDistance_;
    }

    public static final int MAXDISTANCE_FIELD_NUMBER = 2;
    private float maxDistance_;
    /**
     * <pre>
     * Maximum IR sensor distance for forward motion [m]. Default 0.4
     * </pre>
     *
     * <code>optional float maxDistance = 2;</code>
     */
    public boolean hasMaxDistance() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Maximum IR sensor distance for forward motion [m]. Default 0.4
     * </pre>
     *
     * <code>optional float maxDistance = 2;</code>
     */
    public float getMaxDistance() {
      return maxDistance_;
    }

    public static final int TRANSLATIONALVELOCITY_FIELD_NUMBER = 3;
    private float translationalVelocity_;
    /**
     * <pre>
     * Translational nominal (max) velocity [m/s]. Default 1.5
     * </pre>
     *
     * <code>optional float translationalVelocity = 3;</code>
     */
    public boolean hasTranslationalVelocity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Translational nominal (max) velocity [m/s]. Default 1.5
     * </pre>
     *
     * <code>optional float translationalVelocity = 3;</code>
     */
    public float getTranslationalVelocity() {
      return translationalVelocity_;
    }

    public static final int ROTATIONALVELOCITYGAIN_FIELD_NUMBER = 4;
    private float rotationalVelocityGain_;
    /**
     * <pre>
     * Rotational velocity controller gain [rad/s /m]. Default 10.0
     * </pre>
     *
     * <code>optional float rotationalVelocityGain = 4;</code>
     */
    public boolean hasRotationalVelocityGain() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Rotational velocity controller gain [rad/s /m]. Default 10.0
     * </pre>
     *
     * <code>optional float rotationalVelocityGain = 4;</code>
     */
    public float getRotationalVelocityGain() {
      return rotationalVelocityGain_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, minDistance_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, maxDistance_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, translationalVelocity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, rotationalVelocityGain_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, minDistance_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, maxDistance_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, translationalVelocity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, rotationalVelocityGain_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters) obj;

      boolean result = true;
      result = result && (hasMinDistance() == other.hasMinDistance());
      if (hasMinDistance()) {
        result = result && (
            java.lang.Float.floatToIntBits(getMinDistance())
            == java.lang.Float.floatToIntBits(
                other.getMinDistance()));
      }
      result = result && (hasMaxDistance() == other.hasMaxDistance());
      if (hasMaxDistance()) {
        result = result && (
            java.lang.Float.floatToIntBits(getMaxDistance())
            == java.lang.Float.floatToIntBits(
                other.getMaxDistance()));
      }
      result = result && (hasTranslationalVelocity() == other.hasTranslationalVelocity());
      if (hasTranslationalVelocity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTranslationalVelocity())
            == java.lang.Float.floatToIntBits(
                other.getTranslationalVelocity()));
      }
      result = result && (hasRotationalVelocityGain() == other.hasRotationalVelocityGain());
      if (hasRotationalVelocityGain()) {
        result = result && (
            java.lang.Float.floatToIntBits(getRotationalVelocityGain())
            == java.lang.Float.floatToIntBits(
                other.getRotationalVelocityGain()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinDistance()) {
        hash = (37 * hash) + MINDISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinDistance());
      }
      if (hasMaxDistance()) {
        hash = (37 * hash) + MAXDISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxDistance());
      }
      if (hasTranslationalVelocity()) {
        hash = (37 * hash) + TRANSLATIONALVELOCITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTranslationalVelocity());
      }
      if (hasRotationalVelocityGain()) {
        hash = (37 * hash) + ROTATIONALVELOCITYGAIN_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRotationalVelocityGain());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Reactive navigation parameters.
     * If a parameter is set to less than 0, the default value will be reset.
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_ReactiveNavigationParameters_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_ReactiveNavigationParameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minDistance_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxDistance_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        translationalVelocity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        rotationalVelocityGain_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_ReactiveNavigationParameters_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.minDistance_ = minDistance_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxDistance_ = maxDistance_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.translationalVelocity_ = translationalVelocity_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rotationalVelocityGain_ = rotationalVelocityGain_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.getDefaultInstance()) return this;
        if (other.hasMinDistance()) {
          setMinDistance(other.getMinDistance());
        }
        if (other.hasMaxDistance()) {
          setMaxDistance(other.getMaxDistance());
        }
        if (other.hasTranslationalVelocity()) {
          setTranslationalVelocity(other.getTranslationalVelocity());
        }
        if (other.hasRotationalVelocityGain()) {
          setRotationalVelocityGain(other.getRotationalVelocityGain());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float minDistance_ ;
      /**
       * <pre>
       * Minimum IR sensor distance to allow forward motion [m]. Default 0.1
       * </pre>
       *
       * <code>optional float minDistance = 1;</code>
       */
      public boolean hasMinDistance() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Minimum IR sensor distance to allow forward motion [m]. Default 0.1
       * </pre>
       *
       * <code>optional float minDistance = 1;</code>
       */
      public float getMinDistance() {
        return minDistance_;
      }
      /**
       * <pre>
       * Minimum IR sensor distance to allow forward motion [m]. Default 0.1
       * </pre>
       *
       * <code>optional float minDistance = 1;</code>
       */
      public Builder setMinDistance(float value) {
        bitField0_ |= 0x00000001;
        minDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum IR sensor distance to allow forward motion [m]. Default 0.1
       * </pre>
       *
       * <code>optional float minDistance = 1;</code>
       */
      public Builder clearMinDistance() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minDistance_ = 0F;
        onChanged();
        return this;
      }

      private float maxDistance_ ;
      /**
       * <pre>
       * Maximum IR sensor distance for forward motion [m]. Default 0.4
       * </pre>
       *
       * <code>optional float maxDistance = 2;</code>
       */
      public boolean hasMaxDistance() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Maximum IR sensor distance for forward motion [m]. Default 0.4
       * </pre>
       *
       * <code>optional float maxDistance = 2;</code>
       */
      public float getMaxDistance() {
        return maxDistance_;
      }
      /**
       * <pre>
       * Maximum IR sensor distance for forward motion [m]. Default 0.4
       * </pre>
       *
       * <code>optional float maxDistance = 2;</code>
       */
      public Builder setMaxDistance(float value) {
        bitField0_ |= 0x00000002;
        maxDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum IR sensor distance for forward motion [m]. Default 0.4
       * </pre>
       *
       * <code>optional float maxDistance = 2;</code>
       */
      public Builder clearMaxDistance() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxDistance_ = 0F;
        onChanged();
        return this;
      }

      private float translationalVelocity_ ;
      /**
       * <pre>
       * Translational nominal (max) velocity [m/s]. Default 1.5
       * </pre>
       *
       * <code>optional float translationalVelocity = 3;</code>
       */
      public boolean hasTranslationalVelocity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Translational nominal (max) velocity [m/s]. Default 1.5
       * </pre>
       *
       * <code>optional float translationalVelocity = 3;</code>
       */
      public float getTranslationalVelocity() {
        return translationalVelocity_;
      }
      /**
       * <pre>
       * Translational nominal (max) velocity [m/s]. Default 1.5
       * </pre>
       *
       * <code>optional float translationalVelocity = 3;</code>
       */
      public Builder setTranslationalVelocity(float value) {
        bitField0_ |= 0x00000004;
        translationalVelocity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Translational nominal (max) velocity [m/s]. Default 1.5
       * </pre>
       *
       * <code>optional float translationalVelocity = 3;</code>
       */
      public Builder clearTranslationalVelocity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        translationalVelocity_ = 0F;
        onChanged();
        return this;
      }

      private float rotationalVelocityGain_ ;
      /**
       * <pre>
       * Rotational velocity controller gain [rad/s /m]. Default 10.0
       * </pre>
       *
       * <code>optional float rotationalVelocityGain = 4;</code>
       */
      public boolean hasRotationalVelocityGain() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Rotational velocity controller gain [rad/s /m]. Default 10.0
       * </pre>
       *
       * <code>optional float rotationalVelocityGain = 4;</code>
       */
      public float getRotationalVelocityGain() {
        return rotationalVelocityGain_;
      }
      /**
       * <pre>
       * Rotational velocity controller gain [rad/s /m]. Default 10.0
       * </pre>
       *
       * <code>optional float rotationalVelocityGain = 4;</code>
       */
      public Builder setRotationalVelocityGain(float value) {
        bitField0_ |= 0x00000008;
        rotationalVelocityGain_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Rotational velocity controller gain [rad/s /m]. Default 10.0
       * </pre>
       *
       * <code>optional float rotationalVelocityGain = 4;</code>
       */
      public Builder clearRotationalVelocityGain() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rotationalVelocityGain_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ReactiveNavigationParameters>
        PARSER = new com.google.protobuf.AbstractParser<ReactiveNavigationParameters>() {
      @java.lang.Override
      public ReactiveNavigationParameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReactiveNavigationParameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReactiveNavigationParameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReactiveNavigationParameters> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LidarLinesParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Minimum distance between two line regions (e.g. two opposite walls viewed from inside the corridor) [mm]
     * </pre>
     *
     * <code>optional uint32 minRangeDistance = 1;</code>
     */
    boolean hasMinRangeDistance();
    /**
     * <pre>
     * Minimum distance between two line regions (e.g. two opposite walls viewed from inside the corridor) [mm]
     * </pre>
     *
     * <code>optional uint32 minRangeDistance = 1;</code>
     */
    int getMinRangeDistance();

    /**
     * <pre>
     * Maximum distance from a point to a line, in order for that point to belong to that line [mm]
     * </pre>
     *
     * <code>optional uint32 maxLineImprecision = 2;</code>
     */
    boolean hasMaxLineImprecision();
    /**
     * <pre>
     * Maximum distance from a point to a line, in order for that point to belong to that line [mm]
     * </pre>
     *
     * <code>optional uint32 maxLineImprecision = 2;</code>
     */
    int getMaxLineImprecision();

    /**
     * <pre>
     * TODO document
     * </pre>
     *
     * <code>optional uint32 maxAngleBetweenLines = 3;</code>
     */
    boolean hasMaxAngleBetweenLines();
    /**
     * <pre>
     * TODO document
     * </pre>
     *
     * <code>optional uint32 maxAngleBetweenLines = 3;</code>
     */
    int getMaxAngleBetweenLines();
  }
  /**
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters}
   */
  public  static final class LidarLinesParameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters)
      LidarLinesParametersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LidarLinesParameters.newBuilder() to construct.
    private LidarLinesParameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LidarLinesParameters() {
      minRangeDistance_ = 0;
      maxLineImprecision_ = 0;
      maxAngleBetweenLines_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LidarLinesParameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              minRangeDistance_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maxLineImprecision_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              maxAngleBetweenLines_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLinesParameters_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLinesParameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.Builder.class);
    }

    private int bitField0_;
    public static final int MINRANGEDISTANCE_FIELD_NUMBER = 1;
    private int minRangeDistance_;
    /**
     * <pre>
     * Minimum distance between two line regions (e.g. two opposite walls viewed from inside the corridor) [mm]
     * </pre>
     *
     * <code>optional uint32 minRangeDistance = 1;</code>
     */
    public boolean hasMinRangeDistance() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Minimum distance between two line regions (e.g. two opposite walls viewed from inside the corridor) [mm]
     * </pre>
     *
     * <code>optional uint32 minRangeDistance = 1;</code>
     */
    public int getMinRangeDistance() {
      return minRangeDistance_;
    }

    public static final int MAXLINEIMPRECISION_FIELD_NUMBER = 2;
    private int maxLineImprecision_;
    /**
     * <pre>
     * Maximum distance from a point to a line, in order for that point to belong to that line [mm]
     * </pre>
     *
     * <code>optional uint32 maxLineImprecision = 2;</code>
     */
    public boolean hasMaxLineImprecision() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Maximum distance from a point to a line, in order for that point to belong to that line [mm]
     * </pre>
     *
     * <code>optional uint32 maxLineImprecision = 2;</code>
     */
    public int getMaxLineImprecision() {
      return maxLineImprecision_;
    }

    public static final int MAXANGLEBETWEENLINES_FIELD_NUMBER = 3;
    private int maxAngleBetweenLines_;
    /**
     * <pre>
     * TODO document
     * </pre>
     *
     * <code>optional uint32 maxAngleBetweenLines = 3;</code>
     */
    public boolean hasMaxAngleBetweenLines() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * TODO document
     * </pre>
     *
     * <code>optional uint32 maxAngleBetweenLines = 3;</code>
     */
    public int getMaxAngleBetweenLines() {
      return maxAngleBetweenLines_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, minRangeDistance_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, maxLineImprecision_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, maxAngleBetweenLines_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, minRangeDistance_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, maxLineImprecision_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, maxAngleBetweenLines_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters) obj;

      boolean result = true;
      result = result && (hasMinRangeDistance() == other.hasMinRangeDistance());
      if (hasMinRangeDistance()) {
        result = result && (getMinRangeDistance()
            == other.getMinRangeDistance());
      }
      result = result && (hasMaxLineImprecision() == other.hasMaxLineImprecision());
      if (hasMaxLineImprecision()) {
        result = result && (getMaxLineImprecision()
            == other.getMaxLineImprecision());
      }
      result = result && (hasMaxAngleBetweenLines() == other.hasMaxAngleBetweenLines());
      if (hasMaxAngleBetweenLines()) {
        result = result && (getMaxAngleBetweenLines()
            == other.getMaxAngleBetweenLines());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinRangeDistance()) {
        hash = (37 * hash) + MINRANGEDISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + getMinRangeDistance();
      }
      if (hasMaxLineImprecision()) {
        hash = (37 * hash) + MAXLINEIMPRECISION_FIELD_NUMBER;
        hash = (53 * hash) + getMaxLineImprecision();
      }
      if (hasMaxAngleBetweenLines()) {
        hash = (37 * hash) + MAXANGLEBETWEENLINES_FIELD_NUMBER;
        hash = (53 * hash) + getMaxAngleBetweenLines();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLinesParameters_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLinesParameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minRangeDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxLineImprecision_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxAngleBetweenLines_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLinesParameters_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.minRangeDistance_ = minRangeDistance_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxLineImprecision_ = maxLineImprecision_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxAngleBetweenLines_ = maxAngleBetweenLines_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.getDefaultInstance()) return this;
        if (other.hasMinRangeDistance()) {
          setMinRangeDistance(other.getMinRangeDistance());
        }
        if (other.hasMaxLineImprecision()) {
          setMaxLineImprecision(other.getMaxLineImprecision());
        }
        if (other.hasMaxAngleBetweenLines()) {
          setMaxAngleBetweenLines(other.getMaxAngleBetweenLines());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int minRangeDistance_ ;
      /**
       * <pre>
       * Minimum distance between two line regions (e.g. two opposite walls viewed from inside the corridor) [mm]
       * </pre>
       *
       * <code>optional uint32 minRangeDistance = 1;</code>
       */
      public boolean hasMinRangeDistance() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Minimum distance between two line regions (e.g. two opposite walls viewed from inside the corridor) [mm]
       * </pre>
       *
       * <code>optional uint32 minRangeDistance = 1;</code>
       */
      public int getMinRangeDistance() {
        return minRangeDistance_;
      }
      /**
       * <pre>
       * Minimum distance between two line regions (e.g. two opposite walls viewed from inside the corridor) [mm]
       * </pre>
       *
       * <code>optional uint32 minRangeDistance = 1;</code>
       */
      public Builder setMinRangeDistance(int value) {
        bitField0_ |= 0x00000001;
        minRangeDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum distance between two line regions (e.g. two opposite walls viewed from inside the corridor) [mm]
       * </pre>
       *
       * <code>optional uint32 minRangeDistance = 1;</code>
       */
      public Builder clearMinRangeDistance() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minRangeDistance_ = 0;
        onChanged();
        return this;
      }

      private int maxLineImprecision_ ;
      /**
       * <pre>
       * Maximum distance from a point to a line, in order for that point to belong to that line [mm]
       * </pre>
       *
       * <code>optional uint32 maxLineImprecision = 2;</code>
       */
      public boolean hasMaxLineImprecision() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Maximum distance from a point to a line, in order for that point to belong to that line [mm]
       * </pre>
       *
       * <code>optional uint32 maxLineImprecision = 2;</code>
       */
      public int getMaxLineImprecision() {
        return maxLineImprecision_;
      }
      /**
       * <pre>
       * Maximum distance from a point to a line, in order for that point to belong to that line [mm]
       * </pre>
       *
       * <code>optional uint32 maxLineImprecision = 2;</code>
       */
      public Builder setMaxLineImprecision(int value) {
        bitField0_ |= 0x00000002;
        maxLineImprecision_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum distance from a point to a line, in order for that point to belong to that line [mm]
       * </pre>
       *
       * <code>optional uint32 maxLineImprecision = 2;</code>
       */
      public Builder clearMaxLineImprecision() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxLineImprecision_ = 0;
        onChanged();
        return this;
      }

      private int maxAngleBetweenLines_ ;
      /**
       * <pre>
       * TODO document
       * </pre>
       *
       * <code>optional uint32 maxAngleBetweenLines = 3;</code>
       */
      public boolean hasMaxAngleBetweenLines() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * TODO document
       * </pre>
       *
       * <code>optional uint32 maxAngleBetweenLines = 3;</code>
       */
      public int getMaxAngleBetweenLines() {
        return maxAngleBetweenLines_;
      }
      /**
       * <pre>
       * TODO document
       * </pre>
       *
       * <code>optional uint32 maxAngleBetweenLines = 3;</code>
       */
      public Builder setMaxAngleBetweenLines(int value) {
        bitField0_ |= 0x00000004;
        maxAngleBetweenLines_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO document
       * </pre>
       *
       * <code>optional uint32 maxAngleBetweenLines = 3;</code>
       */
      public Builder clearMaxAngleBetweenLines() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxAngleBetweenLines_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LidarLinesParameters>
        PARSER = new com.google.protobuf.AbstractParser<LidarLinesParameters>() {
      @java.lang.Override
      public LidarLinesParameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LidarLinesParameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LidarLinesParameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LidarLinesParameters> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TelecommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.Telecommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    int getTimestamp();

    /**
     * <pre>
     * Desired state
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
     */
    boolean hasState();
    /**
     * <pre>
     * Desired state
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State getState();
    /**
     * <pre>
     * Desired state
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateOrBuilder getStateOrBuilder();

    /**
     * <pre>
     * Desired velocities
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
     */
    boolean hasVelocities();
    /**
     * <pre>
     * Desired velocities
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities getVelocities();
    /**
     * <pre>
     * Desired velocities
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.VelocitiesOrBuilder getVelocitiesOrBuilder();

    /**
     * <pre>
     * Corrected pose, to correct odometry
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
     */
    boolean hasCorrectedPose();
    /**
     * <pre>
     * Corrected pose, to correct odometry
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getCorrectedPose();
    /**
     * <pre>
     * Corrected pose, to correct odometry
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getCorrectedPoseOrBuilder();

    /**
     * <pre>
     * Desired global pose, where the robot should go to (for state AUTO_POSITION)
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
     */
    boolean hasDesiredPose();
    /**
     * <pre>
     * Desired global pose, where the robot should go to (for state AUTO_POSITION)
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getDesiredPose();
    /**
     * <pre>
     * Desired global pose, where the robot should go to (for state AUTO_POSITION)
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getDesiredPoseOrBuilder();

    /**
     * <pre>
     * If different between 1 and 360, request that the next telemetry packet includes Lidar data with the given angle step in degrees. E.g. requestLidarData=2: send Lidar data every 2 degrees.
     * </pre>
     *
     * <code>optional uint32 requestLidarData = 6;</code>
     */
    boolean hasRequestLidarData();
    /**
     * <pre>
     * If different between 1 and 360, request that the next telemetry packet includes Lidar data with the given angle step in degrees. E.g. requestLidarData=2: send Lidar data every 2 degrees.
     * </pre>
     *
     * <code>optional uint32 requestLidarData = 6;</code>
     */
    int getRequestLidarData();

    /**
     * <pre>
     * Request LIDAR lines data
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
     */
    boolean hasRequestLidarLines();
    /**
     * <pre>
     * Request LIDAR lines data
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters getRequestLidarLines();
    /**
     * <pre>
     * Request LIDAR lines data
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParametersOrBuilder getRequestLidarLinesOrBuilder();

    /**
     * <pre>
     * Send reactive navigation parameters 
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
     */
    boolean hasReactiveParameters();
    /**
     * <pre>
     * Send reactive navigation parameters 
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters getReactiveParameters();
    /**
     * <pre>
     * Send reactive navigation parameters 
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParametersOrBuilder getReactiveParametersOrBuilder();
  }
  /**
   * <pre>
   * Telecommand message
   * This message is the main command sent to the robot
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.Telecommand}
   */
  public  static final class Telecommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.Telecommand)
      TelecommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Telecommand.newBuilder() to construct.
    private Telecommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Telecommand() {
      timestamp_ = 0;
      requestLidarData_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Telecommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readUInt32();
              break;
            }
            case 18: {
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = state_.toBuilder();
              }
              state_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(state_);
                state_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = velocities_.toBuilder();
              }
              velocities_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(velocities_);
                velocities_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = correctedPose_.toBuilder();
              }
              correctedPose_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(correctedPose_);
                correctedPose_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = desiredPose_.toBuilder();
              }
              desiredPose_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(desiredPose_);
                desiredPose_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              requestLidarData_ = input.readUInt32();
              break;
            }
            case 58: {
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = requestLidarLines_.toBuilder();
              }
              requestLidarLines_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(requestLidarLines_);
                requestLidarLines_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = reactiveParameters_.toBuilder();
              }
              reactiveParameters_ = input.readMessage(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(reactiveParameters_);
                reactiveParameters_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Telecommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Telecommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private int timestamp_;
    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Timestamp [ms]
     * </pre>
     *
     * <code>optional uint32 timestamp = 1;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int STATE_FIELD_NUMBER = 2;
    private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State state_;
    /**
     * <pre>
     * Desired state
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Desired state
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State getState() {
      return state_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.getDefaultInstance() : state_;
    }
    /**
     * <pre>
     * Desired state
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateOrBuilder getStateOrBuilder() {
      return state_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.getDefaultInstance() : state_;
    }

    public static final int VELOCITIES_FIELD_NUMBER = 3;
    private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities velocities_;
    /**
     * <pre>
     * Desired velocities
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
     */
    public boolean hasVelocities() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Desired velocities
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities getVelocities() {
      return velocities_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.getDefaultInstance() : velocities_;
    }
    /**
     * <pre>
     * Desired velocities
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.VelocitiesOrBuilder getVelocitiesOrBuilder() {
      return velocities_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.getDefaultInstance() : velocities_;
    }

    public static final int CORRECTEDPOSE_FIELD_NUMBER = 4;
    private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose correctedPose_;
    /**
     * <pre>
     * Corrected pose, to correct odometry
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
     */
    public boolean hasCorrectedPose() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Corrected pose, to correct odometry
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getCorrectedPose() {
      return correctedPose_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : correctedPose_;
    }
    /**
     * <pre>
     * Corrected pose, to correct odometry
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getCorrectedPoseOrBuilder() {
      return correctedPose_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : correctedPose_;
    }

    public static final int DESIREDPOSE_FIELD_NUMBER = 5;
    private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose desiredPose_;
    /**
     * <pre>
     * Desired global pose, where the robot should go to (for state AUTO_POSITION)
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
     */
    public boolean hasDesiredPose() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Desired global pose, where the robot should go to (for state AUTO_POSITION)
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getDesiredPose() {
      return desiredPose_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : desiredPose_;
    }
    /**
     * <pre>
     * Desired global pose, where the robot should go to (for state AUTO_POSITION)
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getDesiredPoseOrBuilder() {
      return desiredPose_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : desiredPose_;
    }

    public static final int REQUESTLIDARDATA_FIELD_NUMBER = 6;
    private int requestLidarData_;
    /**
     * <pre>
     * If different between 1 and 360, request that the next telemetry packet includes Lidar data with the given angle step in degrees. E.g. requestLidarData=2: send Lidar data every 2 degrees.
     * </pre>
     *
     * <code>optional uint32 requestLidarData = 6;</code>
     */
    public boolean hasRequestLidarData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * If different between 1 and 360, request that the next telemetry packet includes Lidar data with the given angle step in degrees. E.g. requestLidarData=2: send Lidar data every 2 degrees.
     * </pre>
     *
     * <code>optional uint32 requestLidarData = 6;</code>
     */
    public int getRequestLidarData() {
      return requestLidarData_;
    }

    public static final int REQUESTLIDARLINES_FIELD_NUMBER = 7;
    private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters requestLidarLines_;
    /**
     * <pre>
     * Request LIDAR lines data
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
     */
    public boolean hasRequestLidarLines() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * Request LIDAR lines data
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters getRequestLidarLines() {
      return requestLidarLines_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.getDefaultInstance() : requestLidarLines_;
    }
    /**
     * <pre>
     * Request LIDAR lines data
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParametersOrBuilder getRequestLidarLinesOrBuilder() {
      return requestLidarLines_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.getDefaultInstance() : requestLidarLines_;
    }

    public static final int REACTIVEPARAMETERS_FIELD_NUMBER = 8;
    private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters reactiveParameters_;
    /**
     * <pre>
     * Send reactive navigation parameters 
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
     */
    public boolean hasReactiveParameters() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * Send reactive navigation parameters 
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters getReactiveParameters() {
      return reactiveParameters_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.getDefaultInstance() : reactiveParameters_;
    }
    /**
     * <pre>
     * Send reactive navigation parameters 
     * </pre>
     *
     * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParametersOrBuilder getReactiveParametersOrBuilder() {
      return reactiveParameters_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.getDefaultInstance() : reactiveParameters_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasState()) {
        if (!getState().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasVelocities()) {
        if (!getVelocities().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCorrectedPose()) {
        if (!getCorrectedPose().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDesiredPose()) {
        if (!getDesiredPose().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getState());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getVelocities());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getCorrectedPose());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getDesiredPose());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, requestLidarData_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, getRequestLidarLines());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, getReactiveParameters());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getState());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getVelocities());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCorrectedPose());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getDesiredPose());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, requestLidarData_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getRequestLidarLines());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getReactiveParameters());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand) obj;

      boolean result = true;
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (getTimestamp()
            == other.getTimestamp());
      }
      result = result && (hasState() == other.hasState());
      if (hasState()) {
        result = result && getState()
            .equals(other.getState());
      }
      result = result && (hasVelocities() == other.hasVelocities());
      if (hasVelocities()) {
        result = result && getVelocities()
            .equals(other.getVelocities());
      }
      result = result && (hasCorrectedPose() == other.hasCorrectedPose());
      if (hasCorrectedPose()) {
        result = result && getCorrectedPose()
            .equals(other.getCorrectedPose());
      }
      result = result && (hasDesiredPose() == other.hasDesiredPose());
      if (hasDesiredPose()) {
        result = result && getDesiredPose()
            .equals(other.getDesiredPose());
      }
      result = result && (hasRequestLidarData() == other.hasRequestLidarData());
      if (hasRequestLidarData()) {
        result = result && (getRequestLidarData()
            == other.getRequestLidarData());
      }
      result = result && (hasRequestLidarLines() == other.hasRequestLidarLines());
      if (hasRequestLidarLines()) {
        result = result && getRequestLidarLines()
            .equals(other.getRequestLidarLines());
      }
      result = result && (hasReactiveParameters() == other.hasReactiveParameters());
      if (hasReactiveParameters()) {
        result = result && getReactiveParameters()
            .equals(other.getReactiveParameters());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp();
      }
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + getState().hashCode();
      }
      if (hasVelocities()) {
        hash = (37 * hash) + VELOCITIES_FIELD_NUMBER;
        hash = (53 * hash) + getVelocities().hashCode();
      }
      if (hasCorrectedPose()) {
        hash = (37 * hash) + CORRECTEDPOSE_FIELD_NUMBER;
        hash = (53 * hash) + getCorrectedPose().hashCode();
      }
      if (hasDesiredPose()) {
        hash = (37 * hash) + DESIREDPOSE_FIELD_NUMBER;
        hash = (53 * hash) + getDesiredPose().hashCode();
      }
      if (hasRequestLidarData()) {
        hash = (37 * hash) + REQUESTLIDARDATA_FIELD_NUMBER;
        hash = (53 * hash) + getRequestLidarData();
      }
      if (hasRequestLidarLines()) {
        hash = (37 * hash) + REQUESTLIDARLINES_FIELD_NUMBER;
        hash = (53 * hash) + getRequestLidarLines().hashCode();
      }
      if (hasReactiveParameters()) {
        hash = (37 * hash) + REACTIVEPARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getReactiveParameters().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Telecommand message
     * This message is the main command sent to the robot
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.Telecommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.Telecommand)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Telecommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Telecommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStateFieldBuilder();
          getVelocitiesFieldBuilder();
          getCorrectedPoseFieldBuilder();
          getDesiredPoseFieldBuilder();
          getRequestLidarLinesFieldBuilder();
          getReactiveParametersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (stateBuilder_ == null) {
          state_ = null;
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (velocitiesBuilder_ == null) {
          velocities_ = null;
        } else {
          velocitiesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (correctedPoseBuilder_ == null) {
          correctedPose_ = null;
        } else {
          correctedPoseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (desiredPoseBuilder_ == null) {
          desiredPose_ = null;
        } else {
          desiredPoseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        requestLidarData_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (requestLidarLinesBuilder_ == null) {
          requestLidarLines_ = null;
        } else {
          requestLidarLinesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (reactiveParametersBuilder_ == null) {
          reactiveParameters_ = null;
        } else {
          reactiveParametersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_Telecommand_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (stateBuilder_ == null) {
          result.state_ = state_;
        } else {
          result.state_ = stateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (velocitiesBuilder_ == null) {
          result.velocities_ = velocities_;
        } else {
          result.velocities_ = velocitiesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (correctedPoseBuilder_ == null) {
          result.correctedPose_ = correctedPose_;
        } else {
          result.correctedPose_ = correctedPoseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (desiredPoseBuilder_ == null) {
          result.desiredPose_ = desiredPose_;
        } else {
          result.desiredPose_ = desiredPoseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.requestLidarData_ = requestLidarData_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (requestLidarLinesBuilder_ == null) {
          result.requestLidarLines_ = requestLidarLines_;
        } else {
          result.requestLidarLines_ = requestLidarLinesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (reactiveParametersBuilder_ == null) {
          result.reactiveParameters_ = reactiveParameters_;
        } else {
          result.reactiveParameters_ = reactiveParametersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasState()) {
          mergeState(other.getState());
        }
        if (other.hasVelocities()) {
          mergeVelocities(other.getVelocities());
        }
        if (other.hasCorrectedPose()) {
          mergeCorrectedPose(other.getCorrectedPose());
        }
        if (other.hasDesiredPose()) {
          mergeDesiredPose(other.getDesiredPose());
        }
        if (other.hasRequestLidarData()) {
          setRequestLidarData(other.getRequestLidarData());
        }
        if (other.hasRequestLidarLines()) {
          mergeRequestLidarLines(other.getRequestLidarLines());
        }
        if (other.hasReactiveParameters()) {
          mergeReactiveParameters(other.getReactiveParameters());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasState()) {
          if (!getState().isInitialized()) {
            return false;
          }
        }
        if (hasVelocities()) {
          if (!getVelocities().isInitialized()) {
            return false;
          }
        }
        if (hasCorrectedPose()) {
          if (!getCorrectedPose().isInitialized()) {
            return false;
          }
        }
        if (hasDesiredPose()) {
          if (!getDesiredPose().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int timestamp_ ;
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp [ms]
       * </pre>
       *
       * <code>optional uint32 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State state_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateOrBuilder> stateBuilder_;
      /**
       * <pre>
       * Desired state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Desired state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State getState() {
        if (stateBuilder_ == null) {
          return state_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.getDefaultInstance() : state_;
        } else {
          return stateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Desired state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public Builder setState(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State value) {
        if (stateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          state_ = value;
          onChanged();
        } else {
          stateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Desired state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public Builder setState(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder builderForValue) {
        if (stateBuilder_ == null) {
          state_ = builderForValue.build();
          onChanged();
        } else {
          stateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Desired state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public Builder mergeState(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State value) {
        if (stateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              state_ != null &&
              state_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.getDefaultInstance()) {
            state_ =
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.newBuilder(state_).mergeFrom(value).buildPartial();
          } else {
            state_ = value;
          }
          onChanged();
        } else {
          stateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Desired state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public Builder clearState() {
        if (stateBuilder_ == null) {
          state_ = null;
          onChanged();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * Desired state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder getStateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Desired state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateOrBuilder getStateOrBuilder() {
        if (stateBuilder_ != null) {
          return stateBuilder_.getMessageOrBuilder();
        } else {
          return state_ == null ?
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.getDefaultInstance() : state_;
        }
      }
      /**
       * <pre>
       * Desired state
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.State state = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateOrBuilder> 
          getStateFieldBuilder() {
        if (stateBuilder_ == null) {
          stateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.State.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.StateOrBuilder>(
                  getState(),
                  getParentForChildren(),
                  isClean());
          state_ = null;
        }
        return stateBuilder_;
      }

      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities velocities_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.VelocitiesOrBuilder> velocitiesBuilder_;
      /**
       * <pre>
       * Desired velocities
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
       */
      public boolean hasVelocities() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Desired velocities
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities getVelocities() {
        if (velocitiesBuilder_ == null) {
          return velocities_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.getDefaultInstance() : velocities_;
        } else {
          return velocitiesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Desired velocities
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
       */
      public Builder setVelocities(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities value) {
        if (velocitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          velocities_ = value;
          onChanged();
        } else {
          velocitiesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Desired velocities
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
       */
      public Builder setVelocities(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.Builder builderForValue) {
        if (velocitiesBuilder_ == null) {
          velocities_ = builderForValue.build();
          onChanged();
        } else {
          velocitiesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Desired velocities
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
       */
      public Builder mergeVelocities(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities value) {
        if (velocitiesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              velocities_ != null &&
              velocities_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.getDefaultInstance()) {
            velocities_ =
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.newBuilder(velocities_).mergeFrom(value).buildPartial();
          } else {
            velocities_ = value;
          }
          onChanged();
        } else {
          velocitiesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Desired velocities
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
       */
      public Builder clearVelocities() {
        if (velocitiesBuilder_ == null) {
          velocities_ = null;
          onChanged();
        } else {
          velocitiesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * Desired velocities
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.Builder getVelocitiesBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getVelocitiesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Desired velocities
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.VelocitiesOrBuilder getVelocitiesOrBuilder() {
        if (velocitiesBuilder_ != null) {
          return velocitiesBuilder_.getMessageOrBuilder();
        } else {
          return velocities_ == null ?
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.getDefaultInstance() : velocities_;
        }
      }
      /**
       * <pre>
       * Desired velocities
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Velocities velocities = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.VelocitiesOrBuilder> 
          getVelocitiesFieldBuilder() {
        if (velocitiesBuilder_ == null) {
          velocitiesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Velocities.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.VelocitiesOrBuilder>(
                  getVelocities(),
                  getParentForChildren(),
                  isClean());
          velocities_ = null;
        }
        return velocitiesBuilder_;
      }

      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose correctedPose_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder> correctedPoseBuilder_;
      /**
       * <pre>
       * Corrected pose, to correct odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
       */
      public boolean hasCorrectedPose() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Corrected pose, to correct odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getCorrectedPose() {
        if (correctedPoseBuilder_ == null) {
          return correctedPose_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : correctedPose_;
        } else {
          return correctedPoseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Corrected pose, to correct odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
       */
      public Builder setCorrectedPose(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose value) {
        if (correctedPoseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          correctedPose_ = value;
          onChanged();
        } else {
          correctedPoseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Corrected pose, to correct odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
       */
      public Builder setCorrectedPose(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder builderForValue) {
        if (correctedPoseBuilder_ == null) {
          correctedPose_ = builderForValue.build();
          onChanged();
        } else {
          correctedPoseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Corrected pose, to correct odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
       */
      public Builder mergeCorrectedPose(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose value) {
        if (correctedPoseBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              correctedPose_ != null &&
              correctedPose_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance()) {
            correctedPose_ =
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.newBuilder(correctedPose_).mergeFrom(value).buildPartial();
          } else {
            correctedPose_ = value;
          }
          onChanged();
        } else {
          correctedPoseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Corrected pose, to correct odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
       */
      public Builder clearCorrectedPose() {
        if (correctedPoseBuilder_ == null) {
          correctedPose_ = null;
          onChanged();
        } else {
          correctedPoseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * Corrected pose, to correct odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder getCorrectedPoseBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCorrectedPoseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Corrected pose, to correct odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getCorrectedPoseOrBuilder() {
        if (correctedPoseBuilder_ != null) {
          return correctedPoseBuilder_.getMessageOrBuilder();
        } else {
          return correctedPose_ == null ?
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : correctedPose_;
        }
      }
      /**
       * <pre>
       * Corrected pose, to correct odometry
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose correctedPose = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder> 
          getCorrectedPoseFieldBuilder() {
        if (correctedPoseBuilder_ == null) {
          correctedPoseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder>(
                  getCorrectedPose(),
                  getParentForChildren(),
                  isClean());
          correctedPose_ = null;
        }
        return correctedPoseBuilder_;
      }

      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose desiredPose_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder> desiredPoseBuilder_;
      /**
       * <pre>
       * Desired global pose, where the robot should go to (for state AUTO_POSITION)
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
       */
      public boolean hasDesiredPose() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Desired global pose, where the robot should go to (for state AUTO_POSITION)
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose getDesiredPose() {
        if (desiredPoseBuilder_ == null) {
          return desiredPose_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : desiredPose_;
        } else {
          return desiredPoseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Desired global pose, where the robot should go to (for state AUTO_POSITION)
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
       */
      public Builder setDesiredPose(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose value) {
        if (desiredPoseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          desiredPose_ = value;
          onChanged();
        } else {
          desiredPoseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Desired global pose, where the robot should go to (for state AUTO_POSITION)
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
       */
      public Builder setDesiredPose(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder builderForValue) {
        if (desiredPoseBuilder_ == null) {
          desiredPose_ = builderForValue.build();
          onChanged();
        } else {
          desiredPoseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Desired global pose, where the robot should go to (for state AUTO_POSITION)
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
       */
      public Builder mergeDesiredPose(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose value) {
        if (desiredPoseBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              desiredPose_ != null &&
              desiredPose_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance()) {
            desiredPose_ =
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.newBuilder(desiredPose_).mergeFrom(value).buildPartial();
          } else {
            desiredPose_ = value;
          }
          onChanged();
        } else {
          desiredPoseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Desired global pose, where the robot should go to (for state AUTO_POSITION)
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
       */
      public Builder clearDesiredPose() {
        if (desiredPoseBuilder_ == null) {
          desiredPose_ = null;
          onChanged();
        } else {
          desiredPoseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <pre>
       * Desired global pose, where the robot should go to (for state AUTO_POSITION)
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder getDesiredPoseBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getDesiredPoseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Desired global pose, where the robot should go to (for state AUTO_POSITION)
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder getDesiredPoseOrBuilder() {
        if (desiredPoseBuilder_ != null) {
          return desiredPoseBuilder_.getMessageOrBuilder();
        } else {
          return desiredPose_ == null ?
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.getDefaultInstance() : desiredPose_;
        }
      }
      /**
       * <pre>
       * Desired global pose, where the robot should go to (for state AUTO_POSITION)
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.Pose desiredPose = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder> 
          getDesiredPoseFieldBuilder() {
        if (desiredPoseBuilder_ == null) {
          desiredPoseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Pose.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.PoseOrBuilder>(
                  getDesiredPose(),
                  getParentForChildren(),
                  isClean());
          desiredPose_ = null;
        }
        return desiredPoseBuilder_;
      }

      private int requestLidarData_ ;
      /**
       * <pre>
       * If different between 1 and 360, request that the next telemetry packet includes Lidar data with the given angle step in degrees. E.g. requestLidarData=2: send Lidar data every 2 degrees.
       * </pre>
       *
       * <code>optional uint32 requestLidarData = 6;</code>
       */
      public boolean hasRequestLidarData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * If different between 1 and 360, request that the next telemetry packet includes Lidar data with the given angle step in degrees. E.g. requestLidarData=2: send Lidar data every 2 degrees.
       * </pre>
       *
       * <code>optional uint32 requestLidarData = 6;</code>
       */
      public int getRequestLidarData() {
        return requestLidarData_;
      }
      /**
       * <pre>
       * If different between 1 and 360, request that the next telemetry packet includes Lidar data with the given angle step in degrees. E.g. requestLidarData=2: send Lidar data every 2 degrees.
       * </pre>
       *
       * <code>optional uint32 requestLidarData = 6;</code>
       */
      public Builder setRequestLidarData(int value) {
        bitField0_ |= 0x00000020;
        requestLidarData_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If different between 1 and 360, request that the next telemetry packet includes Lidar data with the given angle step in degrees. E.g. requestLidarData=2: send Lidar data every 2 degrees.
       * </pre>
       *
       * <code>optional uint32 requestLidarData = 6;</code>
       */
      public Builder clearRequestLidarData() {
        bitField0_ = (bitField0_ & ~0x00000020);
        requestLidarData_ = 0;
        onChanged();
        return this;
      }

      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters requestLidarLines_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParametersOrBuilder> requestLidarLinesBuilder_;
      /**
       * <pre>
       * Request LIDAR lines data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
       */
      public boolean hasRequestLidarLines() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * Request LIDAR lines data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters getRequestLidarLines() {
        if (requestLidarLinesBuilder_ == null) {
          return requestLidarLines_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.getDefaultInstance() : requestLidarLines_;
        } else {
          return requestLidarLinesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Request LIDAR lines data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
       */
      public Builder setRequestLidarLines(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters value) {
        if (requestLidarLinesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestLidarLines_ = value;
          onChanged();
        } else {
          requestLidarLinesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <pre>
       * Request LIDAR lines data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
       */
      public Builder setRequestLidarLines(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.Builder builderForValue) {
        if (requestLidarLinesBuilder_ == null) {
          requestLidarLines_ = builderForValue.build();
          onChanged();
        } else {
          requestLidarLinesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <pre>
       * Request LIDAR lines data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
       */
      public Builder mergeRequestLidarLines(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters value) {
        if (requestLidarLinesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              requestLidarLines_ != null &&
              requestLidarLines_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.getDefaultInstance()) {
            requestLidarLines_ =
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.newBuilder(requestLidarLines_).mergeFrom(value).buildPartial();
          } else {
            requestLidarLines_ = value;
          }
          onChanged();
        } else {
          requestLidarLinesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <pre>
       * Request LIDAR lines data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
       */
      public Builder clearRequestLidarLines() {
        if (requestLidarLinesBuilder_ == null) {
          requestLidarLines_ = null;
          onChanged();
        } else {
          requestLidarLinesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <pre>
       * Request LIDAR lines data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.Builder getRequestLidarLinesBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getRequestLidarLinesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Request LIDAR lines data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParametersOrBuilder getRequestLidarLinesOrBuilder() {
        if (requestLidarLinesBuilder_ != null) {
          return requestLidarLinesBuilder_.getMessageOrBuilder();
        } else {
          return requestLidarLines_ == null ?
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.getDefaultInstance() : requestLidarLines_;
        }
      }
      /**
       * <pre>
       * Request LIDAR lines data
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.LidarLinesParameters requestLidarLines = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParametersOrBuilder> 
          getRequestLidarLinesFieldBuilder() {
        if (requestLidarLinesBuilder_ == null) {
          requestLidarLinesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParameters.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.LidarLinesParametersOrBuilder>(
                  getRequestLidarLines(),
                  getParentForChildren(),
                  isClean());
          requestLidarLines_ = null;
        }
        return requestLidarLinesBuilder_;
      }

      private ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters reactiveParameters_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParametersOrBuilder> reactiveParametersBuilder_;
      /**
       * <pre>
       * Send reactive navigation parameters 
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
       */
      public boolean hasReactiveParameters() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * Send reactive navigation parameters 
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters getReactiveParameters() {
        if (reactiveParametersBuilder_ == null) {
          return reactiveParameters_ == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.getDefaultInstance() : reactiveParameters_;
        } else {
          return reactiveParametersBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Send reactive navigation parameters 
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
       */
      public Builder setReactiveParameters(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters value) {
        if (reactiveParametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reactiveParameters_ = value;
          onChanged();
        } else {
          reactiveParametersBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <pre>
       * Send reactive navigation parameters 
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
       */
      public Builder setReactiveParameters(
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.Builder builderForValue) {
        if (reactiveParametersBuilder_ == null) {
          reactiveParameters_ = builderForValue.build();
          onChanged();
        } else {
          reactiveParametersBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <pre>
       * Send reactive navigation parameters 
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
       */
      public Builder mergeReactiveParameters(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters value) {
        if (reactiveParametersBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              reactiveParameters_ != null &&
              reactiveParameters_ != ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.getDefaultInstance()) {
            reactiveParameters_ =
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.newBuilder(reactiveParameters_).mergeFrom(value).buildPartial();
          } else {
            reactiveParameters_ = value;
          }
          onChanged();
        } else {
          reactiveParametersBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <pre>
       * Send reactive navigation parameters 
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
       */
      public Builder clearReactiveParameters() {
        if (reactiveParametersBuilder_ == null) {
          reactiveParameters_ = null;
          onChanged();
        } else {
          reactiveParametersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <pre>
       * Send reactive navigation parameters 
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.Builder getReactiveParametersBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getReactiveParametersFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Send reactive navigation parameters 
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParametersOrBuilder getReactiveParametersOrBuilder() {
        if (reactiveParametersBuilder_ != null) {
          return reactiveParametersBuilder_.getMessageOrBuilder();
        } else {
          return reactiveParameters_ == null ?
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.getDefaultInstance() : reactiveParameters_;
        }
      }
      /**
       * <pre>
       * Send reactive navigation parameters 
       * </pre>
       *
       * <code>optional .ch.bfh.roboticsLab.yellow.communication.ReactiveNavigationParameters reactiveParameters = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParametersOrBuilder> 
          getReactiveParametersFieldBuilder() {
        if (reactiveParametersBuilder_ == null) {
          reactiveParametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParameters.Builder, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.ReactiveNavigationParametersOrBuilder>(
                  getReactiveParameters(),
                  getParentForChildren(),
                  isClean());
          reactiveParameters_ = null;
        }
        return reactiveParametersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.Telecommand)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.Telecommand)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Telecommand>
        PARSER = new com.google.protobuf.AbstractParser<Telecommand>() {
      @java.lang.Override
      public Telecommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Telecommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Telecommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Telecommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.Telecommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TelecommandAcknowledgeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Command acknowledge response
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge.Acknowledge acknowledge = 2;</code>
     */
    boolean hasAcknowledge();
    /**
     * <pre>
     * Command acknowledge response
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge.Acknowledge acknowledge = 2;</code>
     */
    ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Acknowledge getAcknowledge();

    /**
     * <pre>
     * String that may give details of the reason for an ERROR acknowledge
     * </pre>
     *
     * <code>optional bytes message = 3;</code>
     */
    boolean hasMessage();
    /**
     * <pre>
     * String that may give details of the reason for an ERROR acknowledge
     * </pre>
     *
     * <code>optional bytes message = 3;</code>
     */
    com.google.protobuf.ByteString getMessage();
  }
  /**
   * <pre>
   **
   * Telecommand Acknowledge
   * </pre>
   *
   * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge}
   */
  public  static final class TelecommandAcknowledge extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge)
      TelecommandAcknowledgeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TelecommandAcknowledge.newBuilder() to construct.
    private TelecommandAcknowledge(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TelecommandAcknowledge() {
      acknowledge_ = 0;
      message_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TelecommandAcknowledge(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 16: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Acknowledge value = ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Acknowledge.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                acknowledge_ = rawValue;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              message_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_TelecommandAcknowledge_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_TelecommandAcknowledge_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Builder.class);
    }

    /**
     * <pre>
     * Enumeration of possible acknowledge responses
     * </pre>
     *
     * Protobuf enum {@code ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge.Acknowledge}
     */
    public enum Acknowledge
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Command is accepted and will be executed
       * </pre>
       *
       * <code>OK = 0;</code>
       */
      OK(0),
      /**
       * <pre>
       * Command is not accepted and will not be executed
       * </pre>
       *
       * <code>ERROR = 1;</code>
       */
      ERROR(1),
      ;

      /**
       * <pre>
       * Command is accepted and will be executed
       * </pre>
       *
       * <code>OK = 0;</code>
       */
      public static final int OK_VALUE = 0;
      /**
       * <pre>
       * Command is not accepted and will not be executed
       * </pre>
       *
       * <code>ERROR = 1;</code>
       */
      public static final int ERROR_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Acknowledge valueOf(int value) {
        return forNumber(value);
      }

      public static Acknowledge forNumber(int value) {
        switch (value) {
          case 0: return OK;
          case 1: return ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Acknowledge>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Acknowledge> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Acknowledge>() {
              public Acknowledge findValueByNumber(int number) {
                return Acknowledge.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.getDescriptor().getEnumTypes().get(0);
      }

      private static final Acknowledge[] VALUES = values();

      public static Acknowledge valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Acknowledge(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge.Acknowledge)
    }

    private int bitField0_;
    public static final int ACKNOWLEDGE_FIELD_NUMBER = 2;
    private int acknowledge_;
    /**
     * <pre>
     * Command acknowledge response
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge.Acknowledge acknowledge = 2;</code>
     */
    public boolean hasAcknowledge() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Command acknowledge response
     * </pre>
     *
     * <code>required .ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge.Acknowledge acknowledge = 2;</code>
     */
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Acknowledge getAcknowledge() {
      @SuppressWarnings("deprecation")
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Acknowledge result = ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Acknowledge.valueOf(acknowledge_);
      return result == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Acknowledge.OK : result;
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString message_;
    /**
     * <pre>
     * String that may give details of the reason for an ERROR acknowledge
     * </pre>
     *
     * <code>optional bytes message = 3;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * String that may give details of the reason for an ERROR acknowledge
     * </pre>
     *
     * <code>optional bytes message = 3;</code>
     */
    public com.google.protobuf.ByteString getMessage() {
      return message_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAcknowledge()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(2, acknowledge_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, message_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, acknowledge_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge)) {
        return super.equals(obj);
      }
      ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge other = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge) obj;

      boolean result = true;
      result = result && (hasAcknowledge() == other.hasAcknowledge());
      if (hasAcknowledge()) {
        result = result && acknowledge_ == other.acknowledge_;
      }
      result = result && (hasMessage() == other.hasMessage());
      if (hasMessage()) {
        result = result && getMessage()
            .equals(other.getMessage());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAcknowledge()) {
        hash = (37 * hash) + ACKNOWLEDGE_FIELD_NUMBER;
        hash = (53 * hash) + acknowledge_;
      }
      if (hasMessage()) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessage().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Telecommand Acknowledge
     * </pre>
     *
     * Protobuf type {@code ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge)
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledgeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_TelecommandAcknowledge_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_TelecommandAcknowledge_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.class, ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Builder.class);
      }

      // Construct using ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        acknowledge_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.internal_static_ch_bfh_roboticsLab_yellow_communication_TelecommandAcknowledge_descriptor;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge getDefaultInstanceForType() {
        return ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.getDefaultInstance();
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge build() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge buildPartial() {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge result = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.acknowledge_ = acknowledge_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge) {
          return mergeFrom((ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge other) {
        if (other == ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.getDefaultInstance()) return this;
        if (other.hasAcknowledge()) {
          setAcknowledge(other.getAcknowledge());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasAcknowledge()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int acknowledge_ = 0;
      /**
       * <pre>
       * Command acknowledge response
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge.Acknowledge acknowledge = 2;</code>
       */
      public boolean hasAcknowledge() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Command acknowledge response
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge.Acknowledge acknowledge = 2;</code>
       */
      public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Acknowledge getAcknowledge() {
        @SuppressWarnings("deprecation")
        ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Acknowledge result = ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Acknowledge.valueOf(acknowledge_);
        return result == null ? ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Acknowledge.OK : result;
      }
      /**
       * <pre>
       * Command acknowledge response
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge.Acknowledge acknowledge = 2;</code>
       */
      public Builder setAcknowledge(ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge.Acknowledge value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        acknowledge_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Command acknowledge response
       * </pre>
       *
       * <code>required .ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge.Acknowledge acknowledge = 2;</code>
       */
      public Builder clearAcknowledge() {
        bitField0_ = (bitField0_ & ~0x00000001);
        acknowledge_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString message_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * String that may give details of the reason for an ERROR acknowledge
       * </pre>
       *
       * <code>optional bytes message = 3;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * String that may give details of the reason for an ERROR acknowledge
       * </pre>
       *
       * <code>optional bytes message = 3;</code>
       */
      public com.google.protobuf.ByteString getMessage() {
        return message_;
      }
      /**
       * <pre>
       * String that may give details of the reason for an ERROR acknowledge
       * </pre>
       *
       * <code>optional bytes message = 3;</code>
       */
      public Builder setMessage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String that may give details of the reason for an ERROR acknowledge
       * </pre>
       *
       * <code>optional bytes message = 3;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge)
    }

    // @@protoc_insertion_point(class_scope:ch.bfh.roboticsLab.yellow.communication.TelecommandAcknowledge)
    private static final ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge();
    }

    public static ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TelecommandAcknowledge>
        PARSER = new com.google.protobuf.AbstractParser<TelecommandAcknowledge>() {
      @java.lang.Override
      public TelecommandAcknowledge parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TelecommandAcknowledge(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TelecommandAcknowledge> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TelecommandAcknowledge> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.bfh.roboticsLab.yellow.YellowProtoBuffer.TelecommandAcknowledge getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_State_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_State_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_Pose_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_Pose_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_CovarianceMatrix_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_CovarianceMatrix_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_Odometry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_Odometry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_LidarPoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_LidarPoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_Lidar_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_Lidar_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_Line_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_Line_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensors_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensors_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_Telemetry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_Telemetry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_Velocities_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_Velocities_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_ReactiveNavigationParameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_ReactiveNavigationParameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLinesParameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLinesParameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_Telecommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_Telecommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ch_bfh_roboticsLab_yellow_communication_TelecommandAcknowledge_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ch_bfh_roboticsLab_yellow_communication_TelecommandAcknowledge_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014yellow.proto\022\'ch.bfh.roboticsLab.yello" +
      "w.communication\"N\n\005State\022E\n\tstateName\030\001 " +
      "\002(\01622.ch.bfh.roboticsLab.yellow.communic" +
      "ation.StateName\"+\n\004Pose\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030" +
      "\002 \002(\002\022\r\n\005alpha\030\003 \002(\002\"\035\n\020CovarianceMatrix" +
      "\022\t\n\001p\030\001 \003(\002\"\234\001\n\010Odometry\022;\n\004pose\030\001 \002(\0132-" +
      ".ch.bfh.roboticsLab.yellow.communication" +
      ".Pose\022S\n\020covarianceMatrix\030\002 \001(\01329.ch.bfh" +
      ".roboticsLab.yellow.communication.Covari" +
      "anceMatrix\">\n\nLidarPoint\022\r\n\005angle\030\001 \002(\005\022" +
      "\020\n\010distance\030\002 \002(\005\022\017\n\007quality\030\003 \001(\005\"_\n\005Li" +
      "dar\022\021\n\ttimestamp\030\001 \001(\r\022C\n\006points\030\002 \003(\01323" +
      ".ch.bfh.roboticsLab.yellow.communication" +
      ".LidarPoint\"\330\001\n\nLidarLines\022G\n\005lines\030\001 \003(" +
      "\01328.ch.bfh.roboticsLab.yellow.communicat" +
      "ion.LidarLines.Line\032\200\001\n\004Line\022<\n\005start\030\001 " +
      "\002(\0132-.ch.bfh.roboticsLab.yellow.communic" +
      "ation.Pose\022:\n\003end\030\002 \001(\0132-.ch.bfh.robotic" +
      "sLab.yellow.communication.Pose\"\034\n\010IRSens" +
      "or\022\020\n\010distance\030\001 \002(\002\"a\n\tIRSensors\022\021\n\ttim" +
      "estamp\030\001 \001(\r\022A\n\006sensor\030\002 \003(\01321.ch.bfh.ro" +
      "boticsLab.yellow.communication.IRSensor\"" +
      "\352\002\n\tTelemetry\022\021\n\ttimestamp\030\001 \001(\r\022=\n\005stat" +
      "e\030\002 \001(\0132..ch.bfh.roboticsLab.yellow.comm" +
      "unication.State\022C\n\010odometry\030\003 \001(\01321.ch.b" +
      "fh.roboticsLab.yellow.communication.Odom" +
      "etry\022=\n\005lidar\030\004 \001(\0132..ch.bfh.roboticsLab" +
      ".yellow.communication.Lidar\022G\n\nlidarLine" +
      "s\030\005 \001(\01323.ch.bfh.roboticsLab.yellow.comm" +
      "unication.LidarLines\022>\n\002ir\030\006 \001(\01322.ch.bf" +
      "h.roboticsLab.yellow.communication.IRSen" +
      "sors\"7\n\nVelocities\022\023\n\013linearSpeed\030\001 \002(\002\022" +
      "\024\n\014angularSpeed\030\002 \002(\002\"\207\001\n\034ReactiveNaviga" +
      "tionParameters\022\023\n\013minDistance\030\001 \001(\002\022\023\n\013m" +
      "axDistance\030\002 \001(\002\022\035\n\025translationalVelocit" +
      "y\030\003 \001(\002\022\036\n\026rotationalVelocityGain\030\004 \001(\002\"" +
      "j\n\024LidarLinesParameters\022\030\n\020minRangeDista" +
      "nce\030\001 \001(\r\022\032\n\022maxLineImprecision\030\002 \001(\r\022\034\n" +
      "\024maxAngleBetweenLines\030\003 \001(\r\"\211\004\n\013Telecomm" +
      "and\022\021\n\ttimestamp\030\001 \001(\r\022=\n\005state\030\002 \001(\0132.." +
      "ch.bfh.roboticsLab.yellow.communication." +
      "State\022G\n\nvelocities\030\003 \001(\01323.ch.bfh.robot" +
      "icsLab.yellow.communication.Velocities\022D" +
      "\n\rcorrectedPose\030\004 \001(\0132-.ch.bfh.roboticsL" +
      "ab.yellow.communication.Pose\022B\n\013desiredP" +
      "ose\030\005 \001(\0132-.ch.bfh.roboticsLab.yellow.co" +
      "mmunication.Pose\022\030\n\020requestLidarData\030\006 \001" +
      "(\r\022X\n\021requestLidarLines\030\007 \001(\0132=.ch.bfh.r" +
      "oboticsLab.yellow.communication.LidarLin" +
      "esParameters\022a\n\022reactiveParameters\030\010 \001(\013" +
      "2E.ch.bfh.roboticsLab.yellow.communicati" +
      "on.ReactiveNavigationParameters\"\255\001\n\026Tele" +
      "commandAcknowledge\022`\n\013acknowledge\030\002 \002(\0162" +
      "K.ch.bfh.roboticsLab.yellow.communicatio" +
      "n.TelecommandAcknowledge.Acknowledge\022\017\n\007" +
      "message\030\003 \001(\014\" \n\013Acknowledge\022\006\n\002OK\020\000\022\t\n\005" +
      "ERROR\020\001*F\n\tStateName\022\007\n\003OFF\020\001\022\n\n\006MANUAL\020" +
      "\002\022\021\n\rAUTO_REACTIVE\020\003\022\021\n\rAUTO_POSITION\020\004B" +
      ".\n\031ch.bfh.roboticsLab.yellowB\021YellowProt" +
      "oBuffer"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_ch_bfh_roboticsLab_yellow_communication_State_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ch_bfh_roboticsLab_yellow_communication_State_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_State_descriptor,
        new java.lang.String[] { "StateName", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_Pose_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ch_bfh_roboticsLab_yellow_communication_Pose_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_Pose_descriptor,
        new java.lang.String[] { "X", "Y", "Alpha", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_CovarianceMatrix_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ch_bfh_roboticsLab_yellow_communication_CovarianceMatrix_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_CovarianceMatrix_descriptor,
        new java.lang.String[] { "P", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_Odometry_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_ch_bfh_roboticsLab_yellow_communication_Odometry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_Odometry_descriptor,
        new java.lang.String[] { "Pose", "CovarianceMatrix", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_LidarPoint_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_ch_bfh_roboticsLab_yellow_communication_LidarPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_LidarPoint_descriptor,
        new java.lang.String[] { "Angle", "Distance", "Quality", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_Lidar_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_ch_bfh_roboticsLab_yellow_communication_Lidar_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_Lidar_descriptor,
        new java.lang.String[] { "Timestamp", "Points", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_descriptor,
        new java.lang.String[] { "Lines", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_Line_descriptor =
      internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_descriptor.getNestedTypes().get(0);
    internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_Line_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLines_Line_descriptor,
        new java.lang.String[] { "Start", "End", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensor_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensor_descriptor,
        new java.lang.String[] { "Distance", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensors_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensors_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_IRSensors_descriptor,
        new java.lang.String[] { "Timestamp", "Sensor", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_Telemetry_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_ch_bfh_roboticsLab_yellow_communication_Telemetry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_Telemetry_descriptor,
        new java.lang.String[] { "Timestamp", "State", "Odometry", "Lidar", "LidarLines", "Ir", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_Velocities_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_ch_bfh_roboticsLab_yellow_communication_Velocities_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_Velocities_descriptor,
        new java.lang.String[] { "LinearSpeed", "AngularSpeed", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_ReactiveNavigationParameters_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_ch_bfh_roboticsLab_yellow_communication_ReactiveNavigationParameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_ReactiveNavigationParameters_descriptor,
        new java.lang.String[] { "MinDistance", "MaxDistance", "TranslationalVelocity", "RotationalVelocityGain", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLinesParameters_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLinesParameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_LidarLinesParameters_descriptor,
        new java.lang.String[] { "MinRangeDistance", "MaxLineImprecision", "MaxAngleBetweenLines", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_Telecommand_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_ch_bfh_roboticsLab_yellow_communication_Telecommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_Telecommand_descriptor,
        new java.lang.String[] { "Timestamp", "State", "Velocities", "CorrectedPose", "DesiredPose", "RequestLidarData", "RequestLidarLines", "ReactiveParameters", });
    internal_static_ch_bfh_roboticsLab_yellow_communication_TelecommandAcknowledge_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_ch_bfh_roboticsLab_yellow_communication_TelecommandAcknowledge_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ch_bfh_roboticsLab_yellow_communication_TelecommandAcknowledge_descriptor,
        new java.lang.String[] { "Acknowledge", "Message", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
